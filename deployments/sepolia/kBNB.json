{
  "address": "0xfCE55994f4E7dF8f55A37528A167B07fB2407370",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "messageHub_",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashPrior",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestAccumulated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "AccrueInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "kTokenCollateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "LiquidateBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "oldComptroller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "NewComptroller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "oldInterestRateModel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "NewMarketInterestRateModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldMessageHub",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageHub",
          "type": "address"
        }
      ],
      "name": "NewMessageHub",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProtocolSeizeShareMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProtocolSeizeShareMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewProtocolSeizeShare",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldReserveFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewReserveFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "RepayBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesReduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        }
      ],
      "name": "_addReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        }
      ],
      "name": "_reduceReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "_setComptroller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowResign",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "name": "_setImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "_setInterestRateModel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newMessageHub",
          "type": "address"
        }
      ],
      "name": "_setMessageHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolSeizeShareMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setProtocolSeizeShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accrualBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowRatePerTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToViewImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestRateModel",
      "outputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isKToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract KTokenInterface",
          "name": "kTokenCollateral",
          "type": "address"
        }
      ],
      "name": "liquidateBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageHub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolSeizeShareMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowBehalf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyRatePerTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract EIP20NonStandardInterface",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrowsCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x20bb2618e8bf712011b027c117fdde01d785e6ca09bf2f478ff77464f524cf39",
  "receipt": {
    "to": null,
    "from": "0x6027862A465EF7d842e32A8a16a39D4D83c25D3A",
    "contractAddress": "0xfCE55994f4E7dF8f55A37528A167B07fB2407370",
    "transactionIndex": 97,
    "gasUsed": "2003721",
    "logsBloom": "0x
    "blockHash": "0xa4d02271e950bb2effd8877ee770f24e782c4011e51210fc1490250469e88200",
    "transactionHash": "0x20bb2618e8bf712011b027c117fdde01d785e6ca09bf2f478ff77464f524cf39",
    "logs": [
      {
        "transactionIndex": 97,
        "blockNumber": 7100909,
        "transactionHash": "0x20bb2618e8bf712011b027c117fdde01d785e6ca09bf2f478ff77464f524cf39",
        "address": "0xfCE55994f4E7dF8f55A37528A167B07fB2407370",
        "topics": [
          "0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fc9914626026d7ade7f16ce586c37611c59c455",
        "logIndex": 138,
        "blockHash": "0xa4d02271e950bb2effd8877ee770f24e782c4011e51210fc1490250469e88200"
      },
      {
        "transactionIndex": 97,
        "blockNumber": 7100909,
        "transactionHash": "0x20bb2618e8bf712011b027c117fdde01d785e6ca09bf2f478ff77464f524cf39",
        "address": "0xfCE55994f4E7dF8f55A37528A167B07fB2407370",
        "topics": [
          "0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000092684176d8f7a0a54b63ef476af8e3d949a1e3e9",
        "logIndex": 139,
        "blockHash": "0xa4d02271e950bb2effd8877ee770f24e782c4011e51210fc1490250469e88200"
      },
      {
        "transactionIndex": 97,
        "blockNumber": 7100909,
        "transactionHash": "0x20bb2618e8bf712011b027c117fdde01d785e6ca09bf2f478ff77464f524cf39",
        "address": "0xfCE55994f4E7dF8f55A37528A167B07fB2407370",
        "topics": [
          "0xd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d022e1caa86ea77356e91d6767272954fefc790c",
        "logIndex": 140,
        "blockHash": "0xa4d02271e950bb2effd8877ee770f24e782c4011e51210fc1490250469e88200"
      }
    ],
    "blockNumber": 7100909,
    "cumulativeGasUsed": "12126503",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB7d504B145F257cEB5d7143BB34a4FBB7C341491",
    "0x0FC9914626026d7AdE7f16CE586C37611c59C455",
    "0x92684176D8f7a0A54B63ef476af8e3d949a1e3E9",
    "200000000000000000000000000",
    "Kawa BNB",
    "kBNB",
    "8",
    "0xFEaaaf812e5BB9488eA9Ba48818F6b4b46e61993",
    "0x6027862A465EF7d842e32A8a16a39D4D83c25D3A",
    "0xd022E1CAA86Ea77356e91D6767272954FeFc790c",
    "0x00"
  ],
  "numDeployments": 1,
  "solcInputHash": "793c830b20ac64feae3c614cbe433c41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"messageHub_\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashPrior\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"AccrueInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"kTokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"LiquidateBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"NewComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"oldInterestRateModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"NewMarketInterestRateModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldMessageHub\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageHub\",\"type\":\"address\"}],\"name\":\"NewMessageHub\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProtocolSeizeShareMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProtocolSeizeShareMantissa\",\"type\":\"uint256\"}],\"name\":\"NewProtocolSeizeShare\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReserveFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewReserveFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"RepayBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"}],\"name\":\"_addReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"}],\"name\":\"_reduceReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"_setComptroller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowResign\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"name\":\"_setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"_setInterestRateModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMessageHub\",\"type\":\"address\"}],\"name\":\"_setMessageHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProtocolSeizeShareMantissa\",\"type\":\"uint256\"}],\"name\":\"_setProtocolSeizeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrualBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRatePerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToViewImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRateModel\",\"outputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isKToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract KTokenInterface\",\"name\":\"kTokenCollateral\",\"type\":\"address\"}],\"name\":\"liquidateBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageHub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolSeizeShareMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrowBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyRatePerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract EIP20NonStandardInterface\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrowsCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kawa\",\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_addReserves(uint256)\":{\"params\":{\"addAmount\":\"Amount of reserves to add\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_reduceReserves(uint256)\":{\"params\":{\"reduceAmount\":\"Amount of reduction to reserves\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setComptroller(address)\":{\"details\":\"Admin function to set a new comptroller\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setImplementation(address,bool,bytes)\":{\"params\":{\"allowResign\":\"Flag to indicate whether to call _resignImplementation on the old implementation\",\"becomeImplementationData\":\"The encoded bytes data to be passed to _becomeImplementation\",\"implementation_\":\"The address of the new implementation for delegation\"}},\"_setInterestRateModel(address)\":{\"details\":\"Admin function to accrue interest and update the interest rate model\",\"params\":{\"newInterestRateModel\":\"the new interest rate model to use\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setProtocolSeizeShare(uint256)\":{\"details\":\"Admin function to accrue interest and set a new protocol seize share\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setReserveFactor(uint256)\":{\"details\":\"Admin function to accrue interest and set a new reserve factor\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"accrueInterest()\":{\"details\":\"This calculates interest accrued from the last checkpointed block      up to the current block and writes new checkpoint to storage.\"},\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account which owns the tokens to be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"The number of tokens allowed to be spent (uint.max means infinite)\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"amount\":\"The number of tokens that are approved (uint.max means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address of the account to query\"},\"returns\":{\"_0\":\"The number of tokens owned by `owner`\"}},\"balanceOfUnderlying(address)\":{\"details\":\"This also accrues interest in a transaction\",\"params\":{\"owner\":\"The address of the account to query\"},\"returns\":{\"_0\":\"The amount of underlying owned by `owner`\"}},\"borrow(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset to borrow\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"borrowBalanceCurrent(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated after updating borrowIndex\"},\"returns\":{\"_0\":\"The calculated balance\"}},\"borrowBalanceStored(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated\"},\"returns\":{\"_0\":\"The calculated balance\"}},\"borrowRatePerTimestamp()\":{\"returns\":{\"_0\":\"The borrow interest rate per timestamp, scaled by 1e18\"}},\"constructor\":{\"params\":{\"admin_\":\"Address of the administrator of this token\",\"becomeImplementationData\":\"The encoded args for becomeImplementation\",\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"ERC-20 decimal precision of this token\",\"implementation_\":\"The address of the implementation the contract delegates to\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"messageHub_\":\"The address of the MessageHub\",\"name_\":\"ERC-20 name of this token\",\"symbol_\":\"ERC-20 symbol of this token\",\"underlying_\":\"The address of the underlying asset\"}},\"delegateToImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"returns\":{\"_0\":\"The returned bytes from the delegatecall\"}},\"delegateToViewImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts  There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"returns\":{\"_0\":\"The returned bytes from the delegatecall\"}},\"exchangeRateCurrent()\":{\"returns\":{\"_0\":\"Calculated exchange rate scaled by 1e18\"}},\"exchangeRateStored()\":{\"details\":\"This function does not accrue interest before calculating the exchange rate\",\"returns\":{\"_0\":\"Calculated exchange rate scaled by 1e18\"}},\"getAccountSnapshot(address)\":{\"details\":\"This is used by comptroller to more efficiently perform liquidity checks.\",\"params\":{\"account\":\"Address of the account to snapshot\"},\"returns\":{\"_0\":\"(possible error, token balance, borrow balance, exchange rate mantissa)\"}},\"getCash()\":{\"returns\":{\"_0\":\"The quantity of underlying asset owned by this contract\"}},\"liquidateBorrow(address,address,uint256,address)\":{\"params\":{\"borrower\":\"The borrower of this kToken to be liquidated\",\"kTokenCollateral\":\"The market in which to seize collateral from the borrower\",\"liquidator\":\"The address repaying the borrow and seizing collateral\",\"repayAmount\":\"The amount of the underlying borrowed asset to repay\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"mint(address,uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"mintAmount\":\"The amount of the underlying asset to supply\",\"minter\":\"The address of the account which is supplying the assets\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"redeem(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemTokens\":\"The number of kTokens to redeem into underlying\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"redeemUnderlying(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemAmount\":\"The amount of underlying to redeem\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"repayBorrow(address,uint256)\":{\"params\":{\"payer\":\"the account paying off the borrow\",\"repayAmount\":\"The amount to repay, or uint.max for the full outstanding amount\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"repayBorrowBehalf(address,address,uint256)\":{\"params\":{\"borrower\":\"the account with the debt being payed off\",\"payer\":\"the account paying off the borrow\",\"repayAmount\":\"The amount to repay, or uint.max for the full outstanding amount\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"seize(address,address,uint256)\":{\"details\":\"Will fail unless called by another kToken during the process of liquidation.  Its absolutely critical to use msg.sender as the borrowed kToken and not a parameter.\",\"params\":{\"borrower\":\"The account having collateral seized\",\"liquidator\":\"The account receiving seized collateral\",\"seizeTokens\":\"The number of kTokens to seize\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"supplyRatePerTimestamp()\":{\"returns\":{\"_0\":\"The supply interest rate per timestamp, scaled by 1e18\"}},\"sweepToken(address)\":{\"params\":{\"token\":\"The address of the ERC-20 token to sweep\"}},\"totalBorrowsCurrent()\":{\"returns\":{\"_0\":\"The total borrows with interest\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}}},\"title\":\"Kawa's KErc20Delegator.sol Contract\",\"version\":1},\"userdoc\":{\"events\":{\"AccrueInterest(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when interest is accrued\"},\"Approval(address,address,uint256)\":{\"notice\":\"EIP20 Approval event\"},\"Borrow(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when underlying is borrowed\"},\"LiquidateBorrow(address,address,uint256,address,uint256)\":{\"notice\":\"Event emitted when a borrow is liquidated\"},\"Mint(address,uint256,uint256)\":{\"notice\":\"Event emitted when tokens are minted\"},\"NewAdmin(address,address)\":{\"notice\":\"Event emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewComptroller(address,address)\":{\"notice\":\"Event emitted when comptroller is changed\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewMarketInterestRateModel(address,address)\":{\"notice\":\"Event emitted when interestRateModel is changed\"},\"NewMessageHub(address,address)\":{\"notice\":\"Event emitted when the message hub is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Event emitted when pendingAdmin is changed\"},\"NewProtocolSeizeShare(uint256,uint256)\":{\"notice\":\"Event emitted when the protocol seize share is changed\"},\"NewReserveFactor(uint256,uint256)\":{\"notice\":\"Event emitted when the reserve factor is changed\"},\"Redeem(address,uint256,uint256)\":{\"notice\":\"Event emitted when tokens are redeemed\"},\"RepayBorrow(address,address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a borrow is repaid\"},\"ReservesAdded(address,uint256,uint256)\":{\"notice\":\"Event emitted when the reserves are added\"},\"ReservesReduced(address,uint256,uint256)\":{\"notice\":\"Event emitted when the reserves are reduced\"},\"Transfer(address,address,uint256)\":{\"notice\":\"EIP20 Transfer event\"}},\"kind\":\"user\",\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_addReserves(uint256)\":{\"notice\":\"Accrues interest and adds reserves by transferring from admin\"},\"_reduceReserves(uint256)\":{\"notice\":\"Accrues interest and reduces reserves by transferring to admin\"},\"_setComptroller(address)\":{\"notice\":\"Sets a new comptroller for the market\"},\"_setImplementation(address,bool,bytes)\":{\"notice\":\"Called by the admin to update the implementation of the delegator\"},\"_setInterestRateModel(address)\":{\"notice\":\"Accrues interest and updates the interest rate model using _setInterestRateModelFresh\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProtocolSeizeShare(uint256)\":{\"notice\":\"accrues interest and sets a new protocol seize share for the protocol using _setProtocolSeizeShareFresh\"},\"_setReserveFactor(uint256)\":{\"notice\":\"accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\"},\"accrualBlockTimestamp()\":{\"notice\":\"Block number that interest was last accrued at\"},\"accrueInterest()\":{\"notice\":\"Applies accrued interest to total borrows and reserves.\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"allowance(address,address)\":{\"notice\":\"Get the current allowance from `owner` for `spender`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the token balance of the `owner`\"},\"balanceOfUnderlying(address)\":{\"notice\":\"Get the underlying balance of the `owner`\"},\"borrow(uint256)\":{\"notice\":\"Sender borrows assets from the protocol to their own address\"},\"borrowBalanceCurrent(address)\":{\"notice\":\"Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\"},\"borrowBalanceStored(address)\":{\"notice\":\"Return the borrow balance of account based on stored data\"},\"borrowIndex()\":{\"notice\":\"Accumulator of the total earned interest rate since the opening of the market\"},\"borrowRatePerTimestamp()\":{\"notice\":\"Returns the current per-timestamp borrow interest rate for this kToken\"},\"comptroller()\":{\"notice\":\"Contract which oversees inter-kToken operations\"},\"constructor\":{\"notice\":\"Construct a new money market\"},\"decimals()\":{\"notice\":\"EIP-20 token decimals for this token\"},\"delegateToImplementation(bytes)\":{\"notice\":\"Delegates execution to the implementation contract\"},\"delegateToViewImplementation(bytes)\":{\"notice\":\"Delegates execution to an implementation contract\"},\"exchangeRateCurrent()\":{\"notice\":\"Accrue interest then return the up-to-date exchange rate\"},\"exchangeRateStored()\":{\"notice\":\"Calculates the exchange rate from the underlying to the KToken\"},\"getAccountSnapshot(address)\":{\"notice\":\"Get a snapshot of the account's balances, and the cached exchange rate\"},\"getCash()\":{\"notice\":\"Get cash balance of this kToken in the underlying asset\"},\"implementation()\":{\"notice\":\"Implementation address for this contract\"},\"interestRateModel()\":{\"notice\":\"Model which tells what the current interest rate should be\"},\"isKToken()\":{\"notice\":\"Indicator that this is a KToken contract (for inspection)\"},\"liquidateBorrow(address,address,uint256,address)\":{\"notice\":\"The sender liquidates the borrowers collateral.  The collateral seized is transferred to the liquidator.\"},\"messageHub()\":{\"notice\":\"messageHub for this KToken\"},\"mint(address,uint256)\":{\"notice\":\"Sender supplies assets into the market and receives kTokens in exchange\"},\"name()\":{\"notice\":\"EIP-20 token name for this token\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"protocolSeizeShareMantissa()\":{\"notice\":\"Share of seized collateral that is added to reserves\"},\"redeem(uint256)\":{\"notice\":\"Sender redeems kTokens in exchange for the underlying asset\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Sender redeems kTokens in exchange for a specified amount of underlying asset\"},\"repayBorrow(address,uint256)\":{\"notice\":\"Sender repays their own borrow\"},\"repayBorrowBehalf(address,address,uint256)\":{\"notice\":\"Sender repays a borrow belonging to borrower\"},\"reserveFactorMantissa()\":{\"notice\":\"Fraction of interest currently set aside for reserves\"},\"seize(address,address,uint256)\":{\"notice\":\"Transfers collateral tokens (this market) to the liquidator.\"},\"supplyRatePerTimestamp()\":{\"notice\":\"Returns the current per-timestamp supply interest rate for this kToken\"},\"sweepToken(address)\":{\"notice\":\"A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)\"},\"symbol()\":{\"notice\":\"EIP-20 token symbol for this token\"},\"totalBorrows()\":{\"notice\":\"Total amount of outstanding borrows of the underlying in this market\"},\"totalBorrowsCurrent()\":{\"notice\":\"Returns the current total borrows plus accrued interest\"},\"totalReserves()\":{\"notice\":\"Total amount of reserves of the underlying held in this market\"},\"totalSupply()\":{\"notice\":\"Total number of tokens in circulation\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"},\"underlying()\":{\"notice\":\"Underlying asset for this KToken\"}},\"notice\":\"KTokens which wrap an EIP-20 underlying and delegate to an implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KErc20CrossChainDelegator.sol\":\"KErc20CrossChainDelegator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ComptrollerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nabstract contract ComptrollerInterface {\\r\\n    /// @notice Indicator that this is a Comptroller contract (for inspection)\\r\\n    bool public constant isComptroller = true;\\r\\n\\r\\n    /*** Assets You Are In ***/\\r\\n\\r\\n    function enterMarkets(\\r\\n        address[] calldata kTokens\\r\\n    ) external virtual returns (uint[] memory);\\r\\n    function exitMarket(address kToken) external virtual returns (uint);\\r\\n\\r\\n    /*** Policy Hooks ***/\\r\\n\\r\\n    function mintAllowed(\\r\\n        address kToken,\\r\\n        address minter,\\r\\n        uint mintAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function redeemAllowed(\\r\\n        address kToken,\\r\\n        address redeemer,\\r\\n        uint redeemTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    // Do not remove, still used by KToken\\r\\n    function redeemVerify(\\r\\n        address kToken,\\r\\n        address redeemer,\\r\\n        uint redeemAmount,\\r\\n        uint redeemTokens\\r\\n    ) external pure virtual;\\r\\n\\r\\n    function borrowAllowed(\\r\\n        address kToken,\\r\\n        address borrower,\\r\\n        uint borrowAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function repayBorrowAllowed(\\r\\n        address kToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function liquidateBorrowAllowed(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external view virtual returns (uint);\\r\\n\\r\\n    function seizeAllowed(\\r\\n        address kTokenCollateral,\\r\\n        address kTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function transferAllowed(\\r\\n        address kToken,\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint transferTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** Liquidity/Liquidation Calculations ***/\\r\\n\\r\\n    function liquidateCalculateSeizeTokens(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        uint repayAmount\\r\\n    ) external view virtual returns (uint, uint);\\r\\n}\\r\\n\\r\\n// The hooks that were patched out of the comptroller to make room for the supply caps, if we need them\\r\\nabstract contract ComptrollerInterfaceWithAllVerificationHooks is\\r\\n    ComptrollerInterface\\r\\n{\\r\\n    function mintVerify(\\r\\n        address kToken,\\r\\n        address minter,\\r\\n        uint mintAmount,\\r\\n        uint mintTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    // Included in ComptrollerInterface already\\r\\n    // function redeemVerify(address kToken, address redeemer, uint redeemAmount, uint redeemTokens) virtual external;\\r\\n\\r\\n    function borrowVerify(\\r\\n        address kToken,\\r\\n        address borrower,\\r\\n        uint borrowAmount\\r\\n    ) external virtual;\\r\\n\\r\\n    function repayBorrowVerify(\\r\\n        address kToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint borrowerIndex\\r\\n    ) external virtual;\\r\\n\\r\\n    function liquidateBorrowVerify(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint seizeTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    function seizeVerify(\\r\\n        address kTokenCollateral,\\r\\n        address kTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    function transferVerify(\\r\\n        address kToken,\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint transferTokens\\r\\n    ) external virtual;\\r\\n}\\r\\n\",\"keccak256\":\"0x7ae39528ead57993b2652575ffa1457cbe8c1021be94cff255293da3e0dfdd39\",\"license\":\"BSD-3-Clause\"},\"contracts/EIP20NonStandardInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\n/**\\r\\n * @title EIP20NonStandardInterface\\r\\n * @dev Version of ERC20 with no return values for `transfer` and `transferFrom`\\r\\n *  See https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\r\\n */\\r\\ninterface EIP20NonStandardInterface {\\r\\n    /**\\r\\n     * @notice Get the total number of tokens in circulation\\r\\n     * @return The supply of tokens\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Gets the balance of the specified address\\r\\n     * @param owner The address from which the balance will be retrieved\\r\\n     * @return balance The balance\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transfer` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     */\\r\\n    function transfer(address dst, uint256 amount) external;\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transferFrom` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n     * @param src The address of the source account\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     */\\r\\n    function transferFrom(address src, address dst, uint256 amount) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n     * @dev This will overwrite the approval amount for `spender`\\r\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @param amount The number of tokens that are approved\\r\\n     * @return success Whether or not the approval succeeded\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n     * @notice Get the current allowance from `owner` for `spender`\\r\\n     * @param owner The address of the account which owns the tokens to be spent\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @return remaining The number of tokens allowed to be spent\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 amount\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0x93af1d53aab720b15cf34b59c36bf6c9f692987f5a8dd4e5f1f133a4394f980c\",\"license\":\"BSD-3-Clause\"},\"contracts/KErc20CrossChainDelegator.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"./KErc20DelegatorBase.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Kawa's KErc20Delegator.sol Contract\\r\\n * @notice KTokens which wrap an EIP-20 underlying and delegate to an implementation\\r\\n * @author Kawa\\r\\n */\\r\\ncontract KErc20CrossChainDelegator is KErc20DelegatorBase, KErc20CrossChainInterface {\\r\\n    /**\\r\\n     * @notice Construct a new money market\\r\\n     * @param underlying_ The address of the underlying asset\\r\\n     * @param comptroller_ The address of the Comptroller\\r\\n     * @param interestRateModel_ The address of the interest rate model\\r\\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\\r\\n     * @param name_ ERC-20 name of this token\\r\\n     * @param symbol_ ERC-20 symbol of this token\\r\\n     * @param decimals_ ERC-20 decimal precision of this token\\r\\n     * @param admin_ Address of the administrator of this token\\r\\n     * @param implementation_ The address of the implementation the contract delegates to\\r\\n     * @param becomeImplementationData The encoded args for becomeImplementation\\r\\n     * @param messageHub_ The address of the MessageHub\\r\\n     */\\r\\n    constructor(\\r\\n        address underlying_,\\r\\n        ComptrollerInterface comptroller_,\\r\\n        InterestRateModel interestRateModel_,\\r\\n        uint initialExchangeRateMantissa_,\\r\\n        string memory name_,\\r\\n        string memory symbol_,\\r\\n        uint8 decimals_,\\r\\n        address messageHub_,\\r\\n        address payable admin_,\\r\\n        address implementation_,\\r\\n        bytes memory becomeImplementationData\\r\\n    ) {\\r\\n        // Creator of the contract is admin during initialization\\r\\n        admin = payable(msg.sender);\\r\\n\\r\\n        // First delegate gets to initialize the delegator (i.e. storage contract)\\r\\n        delegateTo(\\r\\n            implementation_,\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"initialize(address,address,address,uint256,string,string,uint8,address)\\\",\\r\\n                underlying_,\\r\\n                comptroller_,\\r\\n                interestRateModel_,\\r\\n                initialExchangeRateMantissa_,\\r\\n                name_,\\r\\n                symbol_,\\r\\n                decimals_,\\r\\n                messageHub_\\r\\n            )\\r\\n        );\\r\\n\\r\\n        // New implementations always get set via the settor (post-initialize)\\r\\n        _setImplementation(implementation_, false, becomeImplementationData);\\r\\n\\r\\n        // Set the proper admin now that initialization is done\\r\\n        admin = admin_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender supplies assets into the market and receives kTokens in exchange\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param minter The address of the account which is supplying the assets\\r\\n     * @param mintAmount The amount of the underlying asset to supply\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function mint(\\r\\n        address minter,\\r\\n        uint mintAmount\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"mint(address,uint256)\\\",\\r\\n                minter,\\r\\n                mintAmount\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n    /**\\r\\n     * @notice Sender repays their own borrow\\r\\n     * @param payer the account paying off the borrow\\r\\n     * @param repayAmount The amount to repay, or uint.max for the full outstanding amount\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function repayBorrow(\\r\\n        address payer,\\r\\n        uint repayAmount\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"repayBorrow(address,uint256)\\\",\\r\\n                payer,\\r\\n                repayAmount\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender repays a borrow belonging to borrower\\r\\n     * @param payer the account paying off the borrow\\r\\n     * @param borrower the account with the debt being payed off\\r\\n     * @param repayAmount The amount to repay, or uint.max for the full outstanding amount\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function repayBorrowBehalf(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"repayBorrowBehalf(address,address,uint256)\\\",\\r\\n                payer,\\r\\n                borrower,\\r\\n                repayAmount\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems kTokens in exchange for the underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemTokens The number of kTokens to redeem into underlying\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function redeem(uint redeemTokens) external payable override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"redeem(uint256)\\\", redeemTokens)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems kTokens in exchange for a specified amount of underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemAmount The amount of underlying to redeem\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function redeemUnderlying(\\r\\n        uint redeemAmount\\r\\n    ) external payable override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"redeemUnderlying(uint256)\\\", redeemAmount)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender borrows assets from the protocol to their own address\\r\\n     * @param borrowAmount The amount of the underlying asset to borrow\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function borrow(uint borrowAmount) external payable override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"borrow(uint256)\\\", borrowAmount)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The sender liquidates the borrowers collateral.\\r\\n     *  The collateral seized is transferred to the liquidator.\\r\\n     * @param liquidator The address repaying the borrow and seizing collateral\\r\\n     * @param borrower The borrower of this kToken to be liquidated\\r\\n     * @param kTokenCollateral The market in which to seize collateral from the borrower\\r\\n     * @param repayAmount The amount of the underlying borrowed asset to repay\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function liquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"liquidateBorrow(address,address,uint256,address)\\\",\\r\\n                liquidator,\\r\\n                borrower,\\r\\n                repayAmount,\\r\\n                kTokenCollateral\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    function _setMessageHub(address newMessageHub) external override {\\r\\n        delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"_setMessageHub(address)\\\", newMessageHub)\\r\\n        );\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x26f091a232d221729c1f8f9602ec6bb6211b5ebb9049ecdfa98a5419dca934f3\",\"license\":\"BSD-3-Clause\"},\"contracts/KErc20DelegatorBase.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"./KTokenInterfaces.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Kawa's KErc20Delegator.sol Contract\\r\\n * @notice KTokens which wrap an EIP-20 underlying and delegate to an implementation\\r\\n * @author Kawa\\r\\n */\\r\\ncontract KErc20DelegatorBase is\\r\\nKTokenInterface,\\r\\nKErc20BaseInterface,\\r\\nKDelegatorInterface\\r\\n{\\r\\n    constructor() {}\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     * @return Whether or not the transfer succeeded\\r\\n     */\\r\\n    function transfer(\\r\\n        address dst,\\r\\n        uint amount\\r\\n    ) external override returns (bool) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", dst, amount)\\r\\n        );\\r\\n        return abi.decode(data, (bool));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n     * @param src The address of the source account\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     * @return Whether or not the transfer succeeded\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint256 amount\\r\\n    ) external override returns (bool) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"transferFrom(address,address,uint256)\\\",\\r\\n                src,\\r\\n                dst,\\r\\n                amount\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (bool));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n     * @dev This will overwrite the approval amount for `spender`\\r\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @param amount The number of tokens that are approved (uint.max means infinite)\\r\\n     * @return Whether or not the approval succeeded\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) external override returns (bool) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"approve(address,uint256)\\\", spender, amount)\\r\\n        );\\r\\n        return abi.decode(data, (bool));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the current allowance from `owner` for `spender`\\r\\n     * @param owner The address of the account which owns the tokens to be spent\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @return The number of tokens allowed to be spent (uint.max means infinite)\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"allowance(address,address)\\\",\\r\\n                owner,\\r\\n                spender\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the token balance of the `owner`\\r\\n     * @param owner The address of the account to query\\r\\n     * @return The number of tokens owned by `owner`\\r\\n     */\\r\\n    function balanceOf(address owner) external view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"balanceOf(address)\\\", owner)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the underlying balance of the `owner`\\r\\n     * @dev This also accrues interest in a transaction\\r\\n     * @param owner The address of the account to query\\r\\n     * @return The amount of underlying owned by `owner`\\r\\n     */\\r\\n    function balanceOfUnderlying(\\r\\n        address owner\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"balanceOfUnderlying(address)\\\", owner)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get a snapshot of the account's balances, and the cached exchange rate\\r\\n     * @dev This is used by comptroller to more efficiently perform liquidity checks.\\r\\n     * @param account Address of the account to snapshot\\r\\n     * @return (possible error, token balance, borrow balance, exchange rate mantissa)\\r\\n     */\\r\\n    function getAccountSnapshot(\\r\\n        address account\\r\\n    ) external view override returns (uint, uint, uint, uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"getAccountSnapshot(address)\\\", account)\\r\\n        );\\r\\n        return abi.decode(data, (uint, uint, uint, uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current per-timestamp borrow interest rate for this kToken\\r\\n     * @return The borrow interest rate per timestamp, scaled by 1e18\\r\\n     */\\r\\n    function borrowRatePerTimestamp() external view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"borrowRatePerTimestamp()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current per-timestamp supply interest rate for this kToken\\r\\n     * @return The supply interest rate per timestamp, scaled by 1e18\\r\\n     */\\r\\n    function supplyRatePerTimestamp() external view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"supplyRatePerTimestamp()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current total borrows plus accrued interest\\r\\n     * @return The total borrows with interest\\r\\n     */\\r\\n    function totalBorrowsCurrent() external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"totalBorrowsCurrent()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\\r\\n     * @param account The address whose balance should be calculated after updating borrowIndex\\r\\n     * @return The calculated balance\\r\\n     */\\r\\n    function borrowBalanceCurrent(\\r\\n        address account\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"borrowBalanceCurrent(address)\\\", account)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Return the borrow balance of account based on stored data\\r\\n     * @param account The address whose balance should be calculated\\r\\n     * @return The calculated balance\\r\\n     */\\r\\n    function borrowBalanceStored(\\r\\n        address account\\r\\n    ) public view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"borrowBalanceStored(address)\\\", account)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrue interest then return the up-to-date exchange rate\\r\\n     * @return Calculated exchange rate scaled by 1e18\\r\\n     */\\r\\n    function exchangeRateCurrent() public override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"exchangeRateCurrent()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the exchange rate from the underlying to the KToken\\r\\n     * @dev This function does not accrue interest before calculating the exchange rate\\r\\n     * @return Calculated exchange rate scaled by 1e18\\r\\n     */\\r\\n    function exchangeRateStored() public view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"exchangeRateStored()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get cash balance of this kToken in the underlying asset\\r\\n     * @return The quantity of underlying asset owned by this contract\\r\\n     */\\r\\n    function getCash() external view override returns (uint) {\\r\\n        bytes memory data = delegateToViewImplementation(\\r\\n            abi.encodeWithSignature(\\\"getCash()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Applies accrued interest to total borrows and reserves.\\r\\n     * @dev This calculates interest accrued from the last checkpointed block\\r\\n     *      up to the current block and writes new checkpoint to storage.\\r\\n     */\\r\\n    function accrueInterest() public override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"accrueInterest()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfers collateral tokens (this market) to the liquidator.\\r\\n     * @dev Will fail unless called by another kToken during the process of liquidation.\\r\\n     *  Its absolutely critical to use msg.sender as the borrowed kToken and not a parameter.\\r\\n     * @param liquidator The account receiving seized collateral\\r\\n     * @param borrower The account having collateral seized\\r\\n     * @param seizeTokens The number of kTokens to seize\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function seize(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"seize(address,address,uint256)\\\",\\r\\n                liquidator,\\r\\n                borrower,\\r\\n                seizeTokens\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)\\r\\n     * @param token The address of the ERC-20 token to sweep\\r\\n     */\\r\\n    function sweepToken(EIP20NonStandardInterface token) external override {\\r\\n        delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"sweepToken(address)\\\", token)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @notice Called by the admin to update the implementation of the delegator\\r\\n     * @param implementation_ The address of the new implementation for delegation\\r\\n     * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation\\r\\n     * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation\\r\\n     */\\r\\n    function _setImplementation(\\r\\n        address implementation_,\\r\\n        bool allowResign,\\r\\n        bytes memory becomeImplementationData\\r\\n    ) public override {\\r\\n        require(\\r\\n            msg.sender == admin,\\r\\n            \\\"KErc20Delegator::_setImplementation: Caller must be admin\\\"\\r\\n        );\\r\\n\\r\\n        if (allowResign) {\\r\\n            delegateToImplementation(\\r\\n                abi.encodeWithSignature(\\\"_resignImplementation()\\\")\\r\\n            );\\r\\n        }\\r\\n\\r\\n        address oldImplementation = implementation;\\r\\n        implementation = implementation_;\\r\\n\\r\\n        delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"_becomeImplementation(bytes)\\\",\\r\\n                becomeImplementationData\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit NewImplementation(oldImplementation, implementation);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n     * @param newPendingAdmin New pending admin.\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setPendingAdmin(\\r\\n        address payable newPendingAdmin\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"_setPendingAdmin(address)\\\",\\r\\n                newPendingAdmin\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sets a new comptroller for the market\\r\\n     * @dev Admin function to set a new comptroller\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setComptroller(\\r\\n        ComptrollerInterface newComptroller\\r\\n    ) public override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"_setComptroller(address)\\\", newComptroller)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\\r\\n     * @dev Admin function to accrue interest and set a new reserve factor\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setReserveFactor(\\r\\n        uint newReserveFactorMantissa\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"_setReserveFactor(uint256)\\\",\\r\\n                newReserveFactorMantissa\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\r\\n     * @dev Admin function for pending admin to accept role and update admin\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _acceptAdmin() external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"_acceptAdmin()\\\")\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrues interest and adds reserves by transferring from admin\\r\\n     * @param addAmount Amount of reserves to add\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _addReserves(uint addAmount) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"_addReserves(uint256)\\\", addAmount)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrues interest and reduces reserves by transferring to admin\\r\\n     * @param reduceAmount Amount of reduction to reserves\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _reduceReserves(\\r\\n        uint reduceAmount\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\\"_reduceReserves(uint256)\\\", reduceAmount)\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrues interest and updates the interest rate model using _setInterestRateModelFresh\\r\\n     * @dev Admin function to accrue interest and update the interest rate model\\r\\n     * @param newInterestRateModel the new interest rate model to use\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setInterestRateModel(\\r\\n        InterestRateModel newInterestRateModel\\r\\n    ) public override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"_setInterestRateModel(address)\\\",\\r\\n                newInterestRateModel\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice accrues interest and sets a new protocol seize share for the protocol using _setProtocolSeizeShareFresh\\r\\n     * @dev Admin function to accrue interest and set a new protocol seize share\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setProtocolSeizeShare(\\r\\n        uint newProtocolSeizeShareMantissa\\r\\n    ) external override returns (uint) {\\r\\n        bytes memory data = delegateToImplementation(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"_setProtocolSeizeShare(uint256)\\\",\\r\\n                newProtocolSeizeShareMantissa\\r\\n            )\\r\\n        );\\r\\n        return abi.decode(data, (uint));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Internal method to delegate execution to another contract\\r\\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\r\\n     * @param callee The contract to delegatecall\\r\\n     * @param data The raw data to delegatecall\\r\\n     * @return The returned bytes from the delegatecall\\r\\n     */\\r\\n    function delegateTo(\\r\\n        address callee,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        (bool success, bytes memory returnData) = callee.delegatecall(data);\\r\\n        assembly {\\r\\n            if eq(success, 0) {\\r\\n                revert(add(returnData, 0x20), returndatasize())\\r\\n            }\\r\\n        }\\r\\n        return returnData;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Delegates execution to the implementation contract\\r\\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\r\\n     * @param data The raw data to delegatecall\\r\\n     * @return The returned bytes from the delegatecall\\r\\n     */\\r\\n    function delegateToImplementation(\\r\\n        bytes memory data\\r\\n    ) public returns (bytes memory) {\\r\\n        return delegateTo(implementation, data);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Delegates execution to an implementation contract\\r\\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\r\\n     *  There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.\\r\\n     * @param data The raw data to delegatecall\\r\\n     * @return The returned bytes from the delegatecall\\r\\n     */\\r\\n    function delegateToViewImplementation(\\r\\n        bytes memory data\\r\\n    ) public view returns (bytes memory) {\\r\\n        (bool success, bytes memory returnData) = address(this).staticcall(\\r\\n            abi.encodeWithSignature(\\\"delegateToImplementation(bytes)\\\", data)\\r\\n        );\\r\\n        assembly {\\r\\n            if eq(success, 0) {\\r\\n                revert(add(returnData, 0x20), returndatasize())\\r\\n            }\\r\\n        }\\r\\n        return abi.decode(returnData, (bytes));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Delegates execution to an implementation contract\\r\\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\r\\n     */\\r\\n    fallback() external payable {\\r\\n        require(\\r\\n            msg.value == 0,\\r\\n            \\\"KErc20Delegator:fallback: cannot send value to fallback\\\"\\r\\n        );\\r\\n\\r\\n        // delegate all other functions to current implementation\\r\\n        (bool success,) = implementation.delegatecall(msg.data);\\r\\n\\r\\n        assembly {\\r\\n            let free_mem_ptr := mload(0x40)\\r\\n            returndatacopy(free_mem_ptr, 0, returndatasize())\\r\\n\\r\\n            switch success\\r\\n            case 0 {\\r\\n                revert(free_mem_ptr, returndatasize())\\r\\n            }\\r\\n            default {\\r\\n                return (free_mem_ptr, returndatasize())\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3a6fca789e99db2685ef0bb42a9bec21c7620f20164b8377267d44d17d542fc4\",\"license\":\"BSD-3-Clause\"},\"contracts/KTokenInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"./ComptrollerInterface.sol\\\";\\r\\nimport \\\"./irm/InterestRateModel.sol\\\";\\r\\nimport \\\"./EIP20NonStandardInterface.sol\\\";\\r\\nimport \\\"./TokenErrorReporter.sol\\\";\\r\\n\\r\\ncontract KTokenStorage {\\r\\n    /// @dev Guard variable for re-entrancy checks\\r\\n    bool internal _notEntered;\\r\\n\\r\\n    /// @notice EIP-20 token name for this token\\r\\n    string public name;\\r\\n\\r\\n    /// @notice EIP-20 token symbol for this token\\r\\n    string public symbol;\\r\\n\\r\\n    /// @notice EIP-20 token decimals for this token\\r\\n    uint8 public decimals;\\r\\n\\r\\n    /// @notice Maximum borrow rate that can ever be applied (.0005% / block)\\r\\n    uint internal constant borrowRateMaxMantissa = 0.0005e16;\\r\\n\\r\\n    // @notice Maximum fraction of interest that can be set aside for reserves\\r\\n    uint internal constant reserveFactorMaxMantissa = 1e18;\\r\\n\\r\\n    /// @notice Administrator for this contract\\r\\n    address payable public admin;\\r\\n\\r\\n    /// @notice Pending administrator for this contract\\r\\n    address payable public pendingAdmin;\\r\\n\\r\\n    /// @notice Contract which oversees inter-kToken operations\\r\\n    ComptrollerInterface public comptroller;\\r\\n\\r\\n    /// @notice Model which tells what the current interest rate should be\\r\\n    InterestRateModel public interestRateModel;\\r\\n\\r\\n    // @notice Initial exchange rate used when minting the first KTokens (used when totalSupply = 0)\\r\\n    uint internal initialExchangeRateMantissa;\\r\\n\\r\\n    /// @notice Fraction of interest currently set aside for reserves\\r\\n    uint public reserveFactorMantissa;\\r\\n\\r\\n    /// @notice Block number that interest was last accrued at\\r\\n    uint public accrualBlockTimestamp;\\r\\n\\r\\n    /// @notice Accumulator of the total earned interest rate since the opening of the market\\r\\n    uint public borrowIndex;\\r\\n\\r\\n    /// @notice Total amount of outstanding borrows of the underlying in this market\\r\\n    uint public totalBorrows;\\r\\n\\r\\n    /// @notice Total amount of reserves of the underlying held in this market\\r\\n    uint public totalReserves;\\r\\n\\r\\n    /// @notice Total number of tokens in circulation\\r\\n    uint public totalSupply;\\r\\n\\r\\n    /// @notice Official record of token balances for each account\\r\\n    mapping(address => uint) internal accountTokens;\\r\\n\\r\\n    /// @notice Approved token transfer amounts on behalf of others\\r\\n    mapping(address => mapping(address => uint)) internal transferAllowances;\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @notice Container for borrow balance information\\r\\n     * @member principal Total balance (with accrued interest), after applying the most recent balance-changing action\\r\\n     * @member interestIndex Global borrowIndex as of the most recent balance-changing action\\r\\n     */\\r\\n    struct BorrowSnapshot {\\r\\n        uint principal;\\r\\n        uint interestIndex;\\r\\n    }\\r\\n\\r\\n    // @notice Mapping of account addresses to outstanding borrow balances\\r\\n    mapping(address => BorrowSnapshot) internal accountBorrows;\\r\\n\\r\\n    /// @notice Share of seized collateral that is added to reserves\\r\\n    uint public protocolSeizeShareMantissa;\\r\\n}\\r\\n\\r\\nabstract contract KTokenInterface is KTokenStorage {\\r\\n    /// @notice Indicator that this is a KToken contract (for inspection)\\r\\n    bool public constant isKToken = true;\\r\\n\\r\\n    /*** Market Events ***/\\r\\n\\r\\n    /// @notice Event emitted when interest is accrued\\r\\n    event AccrueInterest(\\r\\n        uint cashPrior,\\r\\n        uint interestAccumulated,\\r\\n        uint borrowIndex,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when tokens are minted\\r\\n    event Mint(address minter, uint mintAmount, uint mintTokens);\\r\\n\\r\\n    /// @notice Event emitted when tokens are redeemed\\r\\n    event Redeem(address redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\r\\n    /// @notice Event emitted when underlying is borrowed\\r\\n    event Borrow(\\r\\n        address borrower,\\r\\n        uint borrowAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is repaid\\r\\n    event RepayBorrow(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is liquidated\\r\\n    event LiquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        address kTokenCollateral,\\r\\n        uint seizeTokens\\r\\n    );\\r\\n\\r\\n    /*** Admin Events ***/\\r\\n\\r\\n    /// @notice Event emitted when pendingAdmin is changed\\r\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\r\\n    /// @notice Event emitted when pendingAdmin is accepted, which means admin is updated\\r\\n    event NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\r\\n    /// @notice Event emitted when comptroller is changed\\r\\n    event NewComptroller(\\r\\n        ComptrollerInterface oldComptroller,\\r\\n        ComptrollerInterface newComptroller\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when interestRateModel is changed\\r\\n    event NewMarketInterestRateModel(\\r\\n        InterestRateModel oldInterestRateModel,\\r\\n        InterestRateModel newInterestRateModel\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserve factor is changed\\r\\n    event NewReserveFactor(\\r\\n        uint oldReserveFactorMantissa,\\r\\n        uint newReserveFactorMantissa\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the protocol seize share is changed\\r\\n    event NewProtocolSeizeShare(\\r\\n        uint oldProtocolSeizeShareMantissa,\\r\\n        uint newProtocolSeizeShareMantissa\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserves are added\\r\\n    event ReservesAdded(\\r\\n        address benefactor,\\r\\n        uint addAmount,\\r\\n        uint newTotalReserves\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserves are reduced\\r\\n    event ReservesReduced(\\r\\n        address admin,\\r\\n        uint reduceAmount,\\r\\n        uint newTotalReserves\\r\\n    );\\r\\n\\r\\n    /// @notice EIP20 Transfer event\\r\\n    event Transfer(address indexed from, address indexed to, uint amount);\\r\\n\\r\\n    /// @notice EIP20 Approval event\\r\\n    event Approval(address indexed owner, address indexed spender, uint amount);\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function transfer(address dst, uint amount) external virtual returns (bool);\\r\\n    function transferFrom(\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view virtual returns (uint);\\r\\n    function balanceOf(address owner) external view virtual returns (uint);\\r\\n    function balanceOfUnderlying(address owner) external virtual returns (uint);\\r\\n    function getAccountSnapshot(\\r\\n        address account\\r\\n    ) external view virtual returns (uint, uint, uint, uint);\\r\\n    function borrowRatePerTimestamp() external view virtual returns (uint);\\r\\n    function supplyRatePerTimestamp() external view virtual returns (uint);\\r\\n    function totalBorrowsCurrent() external virtual returns (uint);\\r\\n    function borrowBalanceCurrent(\\r\\n        address account\\r\\n    ) external virtual returns (uint);\\r\\n    function borrowBalanceStored(\\r\\n        address account\\r\\n    ) external view virtual returns (uint);\\r\\n    function exchangeRateCurrent() external virtual returns (uint);\\r\\n    function exchangeRateStored() external view virtual returns (uint);\\r\\n    function getCash() external view virtual returns (uint);\\r\\n    function accrueInterest() external virtual returns (uint);\\r\\n    function seize(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _setPendingAdmin(\\r\\n        address payable newPendingAdmin\\r\\n    ) external virtual returns (uint);\\r\\n    function _acceptAdmin() external virtual returns (uint);\\r\\n    function _setComptroller(\\r\\n        ComptrollerInterface newComptroller\\r\\n    ) external virtual returns (uint);\\r\\n    function _setReserveFactor(\\r\\n        uint newReserveFactorMantissa\\r\\n    ) external virtual returns (uint);\\r\\n    function _reduceReserves(uint reduceAmount) external virtual returns (uint);\\r\\n    function _setInterestRateModel(\\r\\n        InterestRateModel newInterestRateModel\\r\\n    ) external virtual returns (uint);\\r\\n    function _setProtocolSeizeShare(\\r\\n        uint newProtocolSeizeShareMantissa\\r\\n    ) external virtual returns (uint);\\r\\n}\\r\\n\\r\\ncontract KErc20Storage {\\r\\n    /// @notice Underlying asset for this KToken\\r\\n    address public underlying;\\r\\n    /// @notice messageHub for this KToken\\r\\n    address public messageHub;\\r\\n}\\r\\n\\r\\nabstract contract KErc20BaseInterface is KErc20Storage {\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function sweepToken(EIP20NonStandardInterface token) external virtual;\\r\\n    function _addReserves(uint addAmount) external virtual returns (uint);\\r\\n}\\r\\n\\r\\nabstract contract KErc20Interface {\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function mint(uint mintAmount) external virtual returns (uint);\\r\\n    function mintWithPermit(\\r\\n        uint mintAmount,\\r\\n        uint deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrow(uint repayAmount) external virtual returns (uint);\\r\\n    function repayBorrowBehalf(\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function redeem(uint redeemTokens) external virtual returns (uint);\\r\\n    function redeemUnderlying(\\r\\n        uint redeemAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function borrow(uint borrowAmount) external virtual returns (uint);\\r\\n    function liquidateBorrow(\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external virtual returns (uint);\\r\\n}\\r\\n\\r\\nabstract contract KErc20CrossChainInterface {\\r\\n    /*** MessageHub Interface ***/\\r\\n\\r\\n    function mint(\\r\\n        address minter,\\r\\n        uint mintAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrow(\\r\\n        address payer,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrowBehalf(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function liquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function redeem(uint redeemTokens) external payable virtual returns (uint);\\r\\n    function redeemUnderlying(\\r\\n        uint redeemAmount\\r\\n    ) external payable virtual returns (uint);\\r\\n    function borrow(uint borrowAmount) external payable virtual returns (uint);\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _setMessageHub(address newMessageHub) external virtual;\\r\\n\\r\\n    /// @notice Event emitted when the message hub is changed\\r\\n    event NewMessageHub(\\r\\n        address oldMessageHub,\\r\\n        address messageHub\\r\\n    );\\r\\n}\\r\\n\\r\\ncontract KDelegationStorage {\\r\\n    /// @notice Implementation address for this contract\\r\\n    address public implementation;\\r\\n}\\r\\n\\r\\nabstract contract KDelegatorInterface is KDelegationStorage {\\r\\n    /// @notice Emitted when implementation is changed\\r\\n    event NewImplementation(\\r\\n        address oldImplementation,\\r\\n        address newImplementation\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Called by the admin to update the implementation of the delegator\\r\\n     * @param implementation_ The address of the new implementation for delegation\\r\\n     * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation\\r\\n     * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation\\r\\n     */\\r\\n    function _setImplementation(\\r\\n        address implementation_,\\r\\n        bool allowResign,\\r\\n        bytes memory becomeImplementationData\\r\\n    ) external virtual;\\r\\n}\\r\\n\\r\\nabstract contract KDelegateInterface is KDelegationStorage {\\r\\n    /**\\r\\n     * @notice Called by the delegator on a delegate to initialize it for duty\\r\\n     * @dev Should revert if any issues arise which make it unfit for delegation\\r\\n     * @param data The encoded bytes data for any initialization\\r\\n     */\\r\\n    function _becomeImplementation(bytes memory data) external virtual;\\r\\n\\r\\n    /// @notice Called by the delegator on a delegate to forfeit its responsibility\\r\\n    function _resignImplementation() external virtual;\\r\\n}\\r\\n\\r\\ncontract KClientStorage {\\r\\n\\r\\n    /// @notice MessageHub implementation's address\\r\\n    address public messageHub;\\r\\n\\r\\n    /// @notice Administrator for this contract\\r\\n    address payable public admin;\\r\\n}\\r\\n\\r\\nabstract contract KClientInterface is KClientStorage {\\r\\n    /*** User Interface ***/\\r\\n    function mint(uint mintAmount) external payable virtual;\\r\\n    function repayBorrow(uint repayAmount) external payable virtual;\\r\\n    function repayBorrowBehalf(\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external payable virtual;\\r\\n    function liquidateBorrow(\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external payable virtual;\\r\\n    function releaseETH(\\r\\n        address payable recipient,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n\\r\\n    /// @notice Event emitted when tokens are minted\\r\\n    event Mint(address minter, uint mintAmount, uint mintTokens);\\r\\n\\r\\n    /// @notice Event emitted when a borrow is repaid\\r\\n    event RepayBorrow(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is liquidated\\r\\n    event LiquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        address kTokenCollateral,\\r\\n        uint seizeTokens\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the message hub is changed\\r\\n    event NewMessageHub(\\r\\n        address oldMessageHub,\\r\\n        address messageHub\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xc7dc3bdf7a91e815b84afd32d348e97411d48d86457e484d8ddeb5f08d2790b6\",\"license\":\"BSD-3-Clause\"},\"contracts/TokenErrorReporter.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\ncontract ComptrollerErrorReporter {\\r\\n    enum Error {\\r\\n        NO_ERROR,\\r\\n        UNAUTHORIZED,\\r\\n        COMPTROLLER_MISMATCH,\\r\\n        INSUFFICIENT_SHORTFALL,\\r\\n        INSUFFICIENT_LIQUIDITY,\\r\\n        INVALID_CLOSE_FACTOR,\\r\\n        INVALID_COLLATERAL_FACTOR,\\r\\n        INVALID_LIQUIDATION_INCENTIVE,\\r\\n        MARKET_NOT_ENTERED, // no longer possible\\r\\n        MARKET_NOT_LISTED,\\r\\n        MARKET_ALREADY_LISTED,\\r\\n        MATH_ERROR,\\r\\n        NONZERO_BORROW_BALANCE,\\r\\n        PRICE_ERROR,\\r\\n        REJECTION,\\r\\n        SNAPSHOT_ERROR,\\r\\n        TOO_MANY_ASSETS,\\r\\n        TOO_MUCH_REPAY\\r\\n    }\\r\\n\\r\\n    enum FailureInfo {\\r\\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\\r\\n        ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK,\\r\\n        EXIT_MARKET_BALANCE_OWED,\\r\\n        EXIT_MARKET_REJECTION,\\r\\n        SET_CLOSE_FACTOR_OWNER_CHECK,\\r\\n        SET_CLOSE_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_OWNER_CHECK,\\r\\n        SET_COLLATERAL_FACTOR_NO_EXISTS,\\r\\n        SET_COLLATERAL_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_WITHOUT_PRICE,\\r\\n        SET_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_VALIDATION,\\r\\n        SET_MAX_ASSETS_OWNER_CHECK,\\r\\n        SET_PENDING_ADMIN_OWNER_CHECK,\\r\\n        SET_PENDING_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_PRICE_ORACLE_OWNER_CHECK,\\r\\n        SUPPORT_MARKET_EXISTS,\\r\\n        SUPPORT_MARKET_OWNER_CHECK,\\r\\n        SET_PAUSE_GUARDIAN_OWNER_CHECK,\\r\\n        SET_GAS_AMOUNT_OWNER_CHECK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\\r\\n     * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\\r\\n     **/\\r\\n    event Failure(uint error, uint info, uint detail);\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\\r\\n     */\\r\\n    function fail(Error err, FailureInfo info) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), 0);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting an opaque error from an upgradeable collaborator contract\\r\\n     */\\r\\n    function failOpaque(\\r\\n        Error err,\\r\\n        FailureInfo info,\\r\\n        uint opaqueError\\r\\n    ) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), opaqueError);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract TokenErrorReporter {\\r\\n    enum Error {\\r\\n        NO_ERROR,\\r\\n        UNAUTHORIZED,\\r\\n        BAD_INPUT,\\r\\n        COMPTROLLER_REJECTION,\\r\\n        COMPTROLLER_CALCULATION_ERROR,\\r\\n        INTEREST_RATE_MODEL_ERROR,\\r\\n        INVALID_ACCOUNT_PAIR,\\r\\n        INVALID_CLOSE_AMOUNT_REQUESTED,\\r\\n        INVALID_COLLATERAL_FACTOR,\\r\\n        MATH_ERROR,\\r\\n        MARKET_NOT_FRESH,\\r\\n        MARKET_NOT_LISTED,\\r\\n        TOKEN_INSUFFICIENT_ALLOWANCE,\\r\\n        TOKEN_INSUFFICIENT_BALANCE,\\r\\n        TOKEN_INSUFFICIENT_CASH,\\r\\n        TOKEN_TRANSFER_IN_FAILED,\\r\\n        TOKEN_TRANSFER_OUT_FAILED\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Note: FailureInfo (but not Error) is kept in alphabetical order\\r\\n     *       This is because FailureInfo grows significantly faster, and\\r\\n     *       the order of Error has some meaning, while the order of FailureInfo\\r\\n     *       is entirely arbitrary.\\r\\n     */\\r\\n    enum FailureInfo {\\r\\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\\r\\n        ACCRUE_INTEREST_ACCUMULATED_INTEREST_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_BORROW_RATE_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_BORROW_INDEX_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_TOTAL_BORROWS_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_TOTAL_RESERVES_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_SIMPLE_INTEREST_FACTOR_CALCULATION_FAILED,\\r\\n        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_ACCRUE_INTEREST_FAILED,\\r\\n        BORROW_CASH_NOT_AVAILABLE,\\r\\n        BORROW_FRESHNESS_CHECK,\\r\\n        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_MARKET_NOT_LISTED,\\r\\n        BORROW_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED,\\r\\n        LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED,\\r\\n        LIQUIDATE_COLLATERAL_FRESHNESS_CHECK,\\r\\n        LIQUIDATE_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED,\\r\\n        LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX,\\r\\n        LIQUIDATE_CLOSE_AMOUNT_IS_ZERO,\\r\\n        LIQUIDATE_FRESHNESS_CHECK,\\r\\n        LIQUIDATE_LIQUIDATOR_IS_BORROWER,\\r\\n        LIQUIDATE_REPAY_BORROW_FRESH_FAILED,\\r\\n        LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,\\r\\n        LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,\\r\\n        LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER,\\r\\n        LIQUIDATE_SEIZE_TOO_MUCH,\\r\\n        MINT_ACCRUE_INTEREST_FAILED,\\r\\n        MINT_COMPTROLLER_REJECTION,\\r\\n        MINT_EXCHANGE_CALCULATION_FAILED,\\r\\n        MINT_EXCHANGE_RATE_READ_FAILED,\\r\\n        MINT_FRESHNESS_CHECK,\\r\\n        MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,\\r\\n        MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\\r\\n        MINT_TRANSFER_IN_FAILED,\\r\\n        MINT_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        REDEEM_ACCRUE_INTEREST_FAILED,\\r\\n        REDEEM_COMPTROLLER_REJECTION,\\r\\n        REDEEM_EXCHANGE_TOKENS_CALCULATION_FAILED,\\r\\n        REDEEM_EXCHANGE_AMOUNT_CALCULATION_FAILED,\\r\\n        REDEEM_EXCHANGE_RATE_READ_FAILED,\\r\\n        REDEEM_FRESHNESS_CHECK,\\r\\n        REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,\\r\\n        REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\\r\\n        REDEEM_TRANSFER_OUT_NOT_POSSIBLE,\\r\\n        REDUCE_RESERVES_ACCRUE_INTEREST_FAILED,\\r\\n        REDUCE_RESERVES_ADMIN_CHECK,\\r\\n        REDUCE_RESERVES_CASH_NOT_AVAILABLE,\\r\\n        REDUCE_RESERVES_FRESH_CHECK,\\r\\n        REDUCE_RESERVES_VALIDATION,\\r\\n        REPAY_BEHALF_ACCRUE_INTEREST_FAILED,\\r\\n        REPAY_BORROW_ACCRUE_INTEREST_FAILED,\\r\\n        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_COMPTROLLER_REJECTION,\\r\\n        REPAY_BORROW_FRESHNESS_CHECK,\\r\\n        REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        SET_COLLATERAL_FACTOR_OWNER_CHECK,\\r\\n        SET_COLLATERAL_FACTOR_VALIDATION,\\r\\n        SET_COMPTROLLER_OWNER_CHECK,\\r\\n        SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED,\\r\\n        SET_INTEREST_RATE_MODEL_FRESH_CHECK,\\r\\n        SET_INTEREST_RATE_MODEL_OWNER_CHECK,\\r\\n        SET_MAX_ASSETS_OWNER_CHECK,\\r\\n        SET_ORACLE_MARKET_NOT_LISTED,\\r\\n        SET_PENDING_ADMIN_OWNER_CHECK,\\r\\n        SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED,\\r\\n        SET_RESERVE_FACTOR_ADMIN_CHECK,\\r\\n        SET_RESERVE_FACTOR_FRESH_CHECK,\\r\\n        SET_RESERVE_FACTOR_BOUNDS_CHECK,\\r\\n        TRANSFER_COMPTROLLER_REJECTION,\\r\\n        TRANSFER_NOT_ALLOWED,\\r\\n        TRANSFER_NOT_ENOUGH,\\r\\n        TRANSFER_TOO_MUCH,\\r\\n        ADD_RESERVES_ACCRUE_INTEREST_FAILED,\\r\\n        ADD_RESERVES_FRESH_CHECK,\\r\\n        ADD_RESERVES_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_ACCRUE_INTEREST_FAILED,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_OWNER_CHECK,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_FRESH_CHECK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\\r\\n     * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\\r\\n     **/\\r\\n    event Failure(uint error, uint info, uint detail);\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\\r\\n     */\\r\\n    function fail(Error err, FailureInfo info) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), 0);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting an opaque error from an upgradeable collaborator contract\\r\\n     */\\r\\n    function failOpaque(\\r\\n        Error err,\\r\\n        FailureInfo info,\\r\\n        uint opaqueError\\r\\n    ) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), opaqueError);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9214409e0b914b6ff5ef77e03ecefe0c9271d1e23d27c6dada7a8b1a1235ae17\",\"license\":\"BSD-3-Clause\"},\"contracts/irm/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\n/**\\r\\n * @title Kawa's InterestRateModel Interface\\r\\n * @author Kawa\\r\\n */\\r\\nabstract contract InterestRateModel {\\r\\n    /// @notice Indicator that this is an InterestRateModel contract (for inspection)\\r\\n    bool public constant isInterestRateModel = true;\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the current borrow interest rate per timestamp\\r\\n     * @param cash The total amount of cash the market has\\r\\n     * @param borrows The total amount of borrows the market has outstanding\\r\\n     * @param reserves The total amount of reserves the market has\\r\\n     * @return The borrow rate per timestamp (as a percentage, and scaled by 1e18)\\r\\n     */\\r\\n    function getBorrowRate(\\r\\n        uint cash,\\r\\n        uint borrows,\\r\\n        uint reserves\\r\\n    ) external view virtual returns (uint);\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the current supply interest rate per timestamp\\r\\n     * @param cash The total amount of cash the market has\\r\\n     * @param borrows The total amount of borrows the market has outstanding\\r\\n     * @param reserves The total amount of reserves the market has\\r\\n     * @param reserveFactorMantissa The current reserve factor the market has\\r\\n     * @return The supply rate per timestamp (as a percentage, and scaled by 1e18)\\r\\n     */\\r\\n    function getSupplyRate(\\r\\n        uint cash,\\r\\n        uint borrows,\\r\\n        uint reserves,\\r\\n        uint reserveFactorMantissa\\r\\n    ) external view virtual returns (uint);\\r\\n}\\r\\n\",\"keccak256\":\"0x81db3c2dc31dd9eea2551206086f0c2ab90b150ca9febd1aa2cef5b1f351379d\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620023853803806200238583398101604081905262000034916200040d565b60038054610100600160a81b0319163361010002179055604051620000a790839062000073908e908e908e908e908e908e908e908e906024016200056a565b60408051601f198184030181529190526020810180516001600160e01b03908116636a57c6f160e11b17909152620000ed16565b50620000b68260008362000169565b5050600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055506200061b9650505050505050565b6060600080846001600160a01b0316846040516200010c9190620005e1565b600060405180830381855af49150503d806000811462000149576040519150601f19603f3d011682016040523d82523d6000602084013e6200014e565b606091505b5090925090508162000161573d60208201fd5b949350505050565b60035461010090046001600160a01b03163314620001f35760405162461bcd60e51b815260206004820152603960248201527f4b457263323044656c656761746f723a3a5f736574496d706c656d656e74617460448201527f696f6e3a2043616c6c6572206d7573742062652061646d696e00000000000000606482015260840160405180910390fd5b811562000235576040805160048152602481019091526020810180516001600160e01b0390811663153ab50560e01b17909152620002339190620002f016565b505b601480546001600160a01b038581166001600160a01b0319831617909255604051911690620002a2906200026e908490602401620005ff565b60408051601f198184030181529190526020810180516001600160e01b03908116630adccee560e31b17909152620002f016565b50601454604080516001600160a01b03808516825290921660208301527fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a910160405180910390a150505050565b6014546060906200030b906001600160a01b031683620000ed565b92915050565b80516001600160a01b03811681146200032957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200036157818101518382015260200162000347565b50506000910152565b600082601f8301126200037c57600080fd5b81516001600160401b03808211156200039957620003996200032e565b604051601f8301601f19908116603f01168101908282118183101715620003c457620003c46200032e565b81604052838152866020858801011115620003de57600080fd5b620003f184602083016020890162000344565b9695505050505050565b805160ff811681146200032957600080fd5b60008060008060008060008060008060006101608c8e0312156200043057600080fd5b6200043b8c62000311565b9a506200044b60208d0162000311565b99506200045b60408d0162000311565b60608d015160808e0151919a5098506001600160401b038111156200047f57600080fd5b6200048d8e828f016200036a565b60a08e015190985090506001600160401b03811115620004ac57600080fd5b620004ba8e828f016200036a565b965050620004cb60c08d01620003fb565b9450620004db60e08d0162000311565b9350620004ec6101008d0162000311565b9250620004fd6101208d0162000311565b6101408d01519092506001600160401b038111156200051b57600080fd5b620005298e828f016200036a565b9150509295989b509295989b9093969950565b600081518084526200055681602086016020860162000344565b601f01601f19169290920160200192915050565b6001600160a01b038981168252888116602083015287811660408301526060820187905261010060808301819052600091620005a9848301896200053c565b915083820360a0850152620005bf82886200053c565b925060ff861660c085015280851660e085015250509998505050505050505050565b60008251620005f581846020870162000344565b9190910192915050565b6020815260006200061460208301846200053c565b9392505050565b611d5a806200062b6000396000f3fe6080604052600436106103505760003560e01c80636f307dc3116101c6578063b71d1a0c116100f7578063db006a7511610095578063f2b3abbd1161006f578063f2b3abbd14610a38578063f3fdb15a14610a58578063f851a44014610a78578063fca7820b14610a9d57610350565b8063db006a75146109f0578063dd62ed3e14610a03578063e9c714f214610a2357610350565b8063c5ebeaec116100d1578063c5ebeaec1461099d578063cd91801c146109b0578063cfa99201146109c5578063d3bd2c72146109db57610350565b8063b71d1a0c14610928578063bd6d894d14610948578063c37f68e21461095d57610350565b806395d89b4111610164578063a9059cbb1161013e578063a9059cbb146108b2578063aa5af0fd146108d2578063abdb5ea8146108e8578063b2a02ff11461090857610350565b806395d89b411461086857806395dd91931461087d578063a6afed951461089d57610350565b806383030846116101a057806383030846146107ff578063852a12e31461081f5780638a979cd6146108325780638f840ddd1461085257610350565b80636f307dc3146107aa57806370a08231146107ca57806373acee98146107ea57610350565b80633b1d21a2116102a0578063555bcc401161023e5780635fe3b567116102185780635fe3b56714610734578063601a0bf11461075457806364fd7078146107745780636752e7021461079457610350565b8063555bcc40146106d457806359086a5e146106f45780635c60da1b1461071457610350565b80634487152f1161027a5780634487152f1461065e5780634576b5db1461067e57806347bd37181461069e5780634847655d146106b457610350565b80633b1d21a2146106095780633e9410101461061e57806340c10f191461063e57610350565b8063182df0f51161030d57806326782247116102e7578063267822471461057057806329d9109c146105a8578063313ce567146105bd5780633af9e669146105e957610350565b8063182df0f51461051b5780631be195601461053057806323b872dd1461055057610350565b806306fdde03146104465780630933c1ed14610471578063095ea7b314610491578063173b9904146104c157806317bfdfbc146104e557806318160ddd14610505575b34156103c95760405162461bcd60e51b815260206004820152603760248201527f4b457263323044656c656761746f723a66616c6c6261636b3a2063616e6e6f7460448201527f2073656e642076616c756520746f2066616c6c6261636b00000000000000000060648201526084015b60405180910390fd5b6014546040516000916001600160a01b0316906103e990839036906118d0565b600060405180830381855af49150503d8060008114610424576040519150601f19603f3d011682016040523d82523d6000602084013e610429565b606091505b505090506040513d6000823e818015610440573d82f35b3d82fd5b005b34801561045257600080fd5b5061045b610abd565b6040516104689190611930565b60405180910390f35b34801561047d57600080fd5b5061045b61048c366004611a08565b610b4b565b34801561049d57600080fd5b506104b16104ac366004611a55565b610b6a565b6040519015158152602001610468565b3480156104cd57600080fd5b506104d760085481565b604051908152602001610468565b3480156104f157600080fd5b506104d7610500366004611a81565b610bdc565b34801561051157600080fd5b506104d7600d5481565b34801561052757600080fd5b506104d7610c46565b34801561053c57600080fd5b5061044461054b366004611a81565b610c99565b34801561055c57600080fd5b506104b161056b366004611a9e565b610ce4565b34801561057c57600080fd5b50600454610590906001600160a01b031681565b6040516001600160a01b039091168152602001610468565b3480156105b457600080fd5b506104b1600181565b3480156105c957600080fd5b506003546105d79060ff1681565b60405160ff9091168152602001610468565b3480156105f557600080fd5b506104d7610604366004611a81565b610d5f565b34801561061557600080fd5b506104d7610dac565b34801561062a57600080fd5b506104d7610639366004611adf565b610de3565b34801561064a57600080fd5b506104d7610659366004611a55565b610e2b565b34801561066a57600080fd5b5061045b610679366004611a08565b610e95565b34801561068a57600080fd5b506104d7610699366004611a81565b610f50565b3480156106aa57600080fd5b506104d7600b5481565b3480156106c057600080fd5b50601354610590906001600160a01b031681565b3480156106e057600080fd5b506104446106ef366004611b06565b610f9d565b34801561070057600080fd5b506104d761070f366004611a9e565b61110f565b34801561072057600080fd5b50601454610590906001600160a01b031681565b34801561074057600080fd5b50600554610590906001600160a01b031681565b34801561076057600080fd5b506104d761076f366004611adf565b611181565b34801561078057600080fd5b506104d761078f366004611b68565b6111c9565b3480156107a057600080fd5b506104d760115481565b3480156107b657600080fd5b50601254610590906001600160a01b031681565b3480156107d657600080fd5b506104d76107e5366004611a81565b61124d565b3480156107f657600080fd5b506104d761129a565b34801561080b57600080fd5b506104d761081a366004611adf565b6112d1565b6104d761082d366004611adf565b611319565b34801561083e57600080fd5b5061044461084d366004611a81565b611361565b34801561085e57600080fd5b506104d7600c5481565b34801561087457600080fd5b5061045b6113a9565b34801561088957600080fd5b506104d7610898366004611a81565b6113b6565b3480156108a957600080fd5b506104d7611403565b3480156108be57600080fd5b506104b16108cd366004611a55565b61143a565b3480156108de57600080fd5b506104d7600a5481565b3480156108f457600080fd5b506104d7610903366004611a55565b61148e565b34801561091457600080fd5b506104d7610923366004611a9e565b6114e2565b34801561093457600080fd5b506104d7610943366004611a81565b61153e565b34801561095457600080fd5b506104d761158b565b34801561096957600080fd5b5061097d610978366004611a81565b6115c2565b604080519485526020850193909352918301526060820152608001610468565b6104d76109ab366004611adf565b611642565b3480156109bc57600080fd5b506104d761168a565b3480156109d157600080fd5b506104d760095481565b3480156109e757600080fd5b506104d76116c1565b6104d76109fe366004611adf565b6116f8565b348015610a0f57600080fd5b506104d7610a1e366004611bbb565b611740565b348015610a2f57600080fd5b506104d7611795565b348015610a4457600080fd5b506104d7610a53366004611a81565b6117cc565b348015610a6457600080fd5b50600654610590906001600160a01b031681565b348015610a8457600080fd5b506003546105909061010090046001600160a01b031681565b348015610aa957600080fd5b506104d7610ab8366004611adf565b611819565b60018054610aca90611bf4565b80601f0160208091040260200160405190810160405280929190818152602001828054610af690611bf4565b8015610b435780601f10610b1857610100808354040283529160200191610b43565b820191906000526020600020905b815481529060010190602001808311610b2657829003601f168201915b505050505081565b601454606090610b64906001600160a01b031683611861565b92915050565b6040516001600160a01b0383166024820152604481018290526000908190610bbe9060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b179052610b4b565b905080806020019051810190610bd49190611c2e565b949350505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166305eff7ef60e21b179052610b4b565b905080806020019051810190610c3f9190611c4b565b9392505050565b6040805160048152602481019091526020810180516001600160e01b031663182df0f560e01b1790526000908190610c7d90610e95565b905080806020019051810190610c939190611c4b565b91505090565b6040516001600160a01b0382166024820152610ce09060440160408051601f198184030181529190526020810180516001600160e01b031662df0cab60e51b179052610b4b565b5050565b6040516001600160a01b03808516602483015283166044820152606481018290526000908190610d409060840160408051601f198184030181529190526020810180516001600160e01b03166323b872dd60e01b179052610b4b565b905080806020019051810190610d569190611c2e565b95945050505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316633af9e66960e01b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b0316631d8e90d160e11b1790526000908190610c7d90610e95565b600080610c2983604051602401610dfc91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166303e9410160e41b179052610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b03166340c10f1960e01b179052610b4b565b905080806020019051810190610bd49190611c4b565b6060600080306001600160a01b031684604051602401610eb59190611930565b60408051601f198184030181529181526020820180516001600160e01b0316630933c1ed60e01b17905251610eea9190611c64565b600060405180830381855afa9150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b50909250905081610f3c573d60208201fd5b80806020019051810190610bd49190611c80565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316634576b5db60e01b179052610b4b565b60035461010090046001600160a01b031633146110225760405162461bcd60e51b815260206004820152603960248201527f4b457263323044656c656761746f723a3a5f736574496d706c656d656e74617460448201527f696f6e3a2043616c6c6572206d7573742062652061646d696e0000000000000060648201526084016103c0565b811561105c576040805160048152602481019091526020810180516001600160e01b031663153ab50560e01b17905261105a90610b4b565b505b601480546001600160a01b038581166001600160a01b03198316179092556040519116906110c190611092908490602401611930565b60408051601f198184030181529190526020810180516001600160e01b0316630adccee560e31b179052610b4b565b50601454604080516001600160a01b03808516825290921660208301527fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a910160405180910390a150505050565b6040516001600160a01b0380851660248301528316604482015260648101829052600090819061116b9060840160408051601f198184030181529190526020810180516001600160e01b0316632c84352f60e11b179052610b4b565b905080806020019051810190610d569190611c4b565b600080610c298360405160240161119a91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663601a0bf160e01b179052610b4b565b6040516001600160a01b03808616602483015280851660448301526064820184905282166084820152600090819061122d9060a40160408051601f198184030181529190526020810180516001600160e01b0316630c9fae0f60e31b179052610b4b565b9050808060200190518101906112439190611c4b565b9695505050505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166370a0823160e01b179052610e95565b6040805160048152602481019091526020810180516001600160e01b0316630e759dd360e31b1790526000908190610c7d90610b4b565b600080610c29836040516024016112ea91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634181842360e11b179052610b4b565b600080610c298360405160240161133291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663852a12e360e01b179052610b4b565b6040516001600160a01b0382166024820152610ce09060440160408051601f198184030181529190526020810180516001600160e01b031663454bce6b60e11b179052610b4b565b60028054610aca90611bf4565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166395dd919360e01b179052610e95565b6040805160048152602481019091526020810180516001600160e01b031663a6afed9560e01b1790526000908190610c7d90610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610bbe9060640160408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b179052610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b031663157b6bd560e31b179052610b4b565b6040516001600160a01b0380851660248301528316604482015260648101829052600090819061116b9060840160408051601f198184030181529190526020810180516001600160e01b031663b2a02ff160e01b179052610b4b565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316632dc7468360e21b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b031663bd6d894d60e01b1790526000908190610c7d90610b4b565b600080600080600061161c866040516024016115ed91906001600160a01b0391909116815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166361bfb47160e11b179052610e95565b9050808060200190518101906116329190611cee565b9450945094509450509193509193565b600080610c298360405160240161165b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663317afabb60e21b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b0316633364600760e21b1790526000908190610c7d90610e95565b6040805160048152602481019091526020810180516001600160e01b03166369de963960e11b1790526000908190610c7d90610e95565b600080610c298360405160240161171191815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663db006a7560e01b179052610b4b565b6040516001600160a01b038084166024830152821660448201526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b0316636eb1769f60e11b179052610e95565b6040805160048152602481019091526020810180516001600160e01b03166374e38a7960e11b1790526000908190610c7d90610b4b565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b031663f2b3abbd60e01b179052610b4b565b600080610c298360405160240161183291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663fca7820b60e01b179052610b4b565b6060600080846001600160a01b03168460405161187e9190611c64565b600060405180830381855af49150503d80600081146118b9576040519150601f19603f3d011682016040523d82523d6000602084013e6118be565b606091505b50909250905081610bd4573d60208201fd5b8183823760009101908152919050565b60005b838110156118fb5781810151838201526020016118e3565b50506000910152565b6000815180845261191c8160208601602086016118e0565b601f01601f19169290920160200192915050565b602081526000610c3f6020830184611904565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561198257611982611943565b604052919050565b600067ffffffffffffffff8211156119a4576119a4611943565b50601f01601f191660200190565b600082601f8301126119c357600080fd5b81356119d66119d18261198a565b611959565b8181528460208386010111156119eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611a1a57600080fd5b813567ffffffffffffffff811115611a3157600080fd5b610bd4848285016119b2565b6001600160a01b0381168114611a5257600080fd5b50565b60008060408385031215611a6857600080fd5b8235611a7381611a3d565b946020939093013593505050565b600060208284031215611a9357600080fd5b8135610c3f81611a3d565b600080600060608486031215611ab357600080fd5b8335611abe81611a3d565b92506020840135611ace81611a3d565b929592945050506040919091013590565b600060208284031215611af157600080fd5b5035919050565b8015158114611a5257600080fd5b600080600060608486031215611b1b57600080fd5b8335611b2681611a3d565b92506020840135611b3681611af8565b9150604084013567ffffffffffffffff811115611b5257600080fd5b611b5e868287016119b2565b9150509250925092565b60008060008060808587031215611b7e57600080fd5b8435611b8981611a3d565b93506020850135611b9981611a3d565b9250604085013591506060850135611bb081611a3d565b939692955090935050565b60008060408385031215611bce57600080fd5b8235611bd981611a3d565b91506020830135611be981611a3d565b809150509250929050565b600181811c90821680611c0857607f821691505b602082108103611c2857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c4057600080fd5b8151610c3f81611af8565b600060208284031215611c5d57600080fd5b5051919050565b60008251611c768184602087016118e0565b9190910192915050565b600060208284031215611c9257600080fd5b815167ffffffffffffffff811115611ca957600080fd5b8201601f81018413611cba57600080fd5b8051611cc86119d18261198a565b818152856020838501011115611cdd57600080fd5b610d568260208301602086016118e0565b60008060008060808587031215611d0457600080fd5b50508251602084015160408501516060909501519196909550909250905056fea2646970667358221220efdbaf1a1bda1e7866466a98cc8431879659f89c20f70699ed5a914f7600545864736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106103505760003560e01c80636f307dc3116101c6578063b71d1a0c116100f7578063db006a7511610095578063f2b3abbd1161006f578063f2b3abbd14610a38578063f3fdb15a14610a58578063f851a44014610a78578063fca7820b14610a9d57610350565b8063db006a75146109f0578063dd62ed3e14610a03578063e9c714f214610a2357610350565b8063c5ebeaec116100d1578063c5ebeaec1461099d578063cd91801c146109b0578063cfa99201146109c5578063d3bd2c72146109db57610350565b8063b71d1a0c14610928578063bd6d894d14610948578063c37f68e21461095d57610350565b806395d89b4111610164578063a9059cbb1161013e578063a9059cbb146108b2578063aa5af0fd146108d2578063abdb5ea8146108e8578063b2a02ff11461090857610350565b806395d89b411461086857806395dd91931461087d578063a6afed951461089d57610350565b806383030846116101a057806383030846146107ff578063852a12e31461081f5780638a979cd6146108325780638f840ddd1461085257610350565b80636f307dc3146107aa57806370a08231146107ca57806373acee98146107ea57610350565b80633b1d21a2116102a0578063555bcc401161023e5780635fe3b567116102185780635fe3b56714610734578063601a0bf11461075457806364fd7078146107745780636752e7021461079457610350565b8063555bcc40146106d457806359086a5e146106f45780635c60da1b1461071457610350565b80634487152f1161027a5780634487152f1461065e5780634576b5db1461067e57806347bd37181461069e5780634847655d146106b457610350565b80633b1d21a2146106095780633e9410101461061e57806340c10f191461063e57610350565b8063182df0f51161030d57806326782247116102e7578063267822471461057057806329d9109c146105a8578063313ce567146105bd5780633af9e669146105e957610350565b8063182df0f51461051b5780631be195601461053057806323b872dd1461055057610350565b806306fdde03146104465780630933c1ed14610471578063095ea7b314610491578063173b9904146104c157806317bfdfbc146104e557806318160ddd14610505575b34156103c95760405162461bcd60e51b815260206004820152603760248201527f4b457263323044656c656761746f723a66616c6c6261636b3a2063616e6e6f7460448201527f2073656e642076616c756520746f2066616c6c6261636b00000000000000000060648201526084015b60405180910390fd5b6014546040516000916001600160a01b0316906103e990839036906118d0565b600060405180830381855af49150503d8060008114610424576040519150601f19603f3d011682016040523d82523d6000602084013e610429565b606091505b505090506040513d6000823e818015610440573d82f35b3d82fd5b005b34801561045257600080fd5b5061045b610abd565b6040516104689190611930565b60405180910390f35b34801561047d57600080fd5b5061045b61048c366004611a08565b610b4b565b34801561049d57600080fd5b506104b16104ac366004611a55565b610b6a565b6040519015158152602001610468565b3480156104cd57600080fd5b506104d760085481565b604051908152602001610468565b3480156104f157600080fd5b506104d7610500366004611a81565b610bdc565b34801561051157600080fd5b506104d7600d5481565b34801561052757600080fd5b506104d7610c46565b34801561053c57600080fd5b5061044461054b366004611a81565b610c99565b34801561055c57600080fd5b506104b161056b366004611a9e565b610ce4565b34801561057c57600080fd5b50600454610590906001600160a01b031681565b6040516001600160a01b039091168152602001610468565b3480156105b457600080fd5b506104b1600181565b3480156105c957600080fd5b506003546105d79060ff1681565b60405160ff9091168152602001610468565b3480156105f557600080fd5b506104d7610604366004611a81565b610d5f565b34801561061557600080fd5b506104d7610dac565b34801561062a57600080fd5b506104d7610639366004611adf565b610de3565b34801561064a57600080fd5b506104d7610659366004611a55565b610e2b565b34801561066a57600080fd5b5061045b610679366004611a08565b610e95565b34801561068a57600080fd5b506104d7610699366004611a81565b610f50565b3480156106aa57600080fd5b506104d7600b5481565b3480156106c057600080fd5b50601354610590906001600160a01b031681565b3480156106e057600080fd5b506104446106ef366004611b06565b610f9d565b34801561070057600080fd5b506104d761070f366004611a9e565b61110f565b34801561072057600080fd5b50601454610590906001600160a01b031681565b34801561074057600080fd5b50600554610590906001600160a01b031681565b34801561076057600080fd5b506104d761076f366004611adf565b611181565b34801561078057600080fd5b506104d761078f366004611b68565b6111c9565b3480156107a057600080fd5b506104d760115481565b3480156107b657600080fd5b50601254610590906001600160a01b031681565b3480156107d657600080fd5b506104d76107e5366004611a81565b61124d565b3480156107f657600080fd5b506104d761129a565b34801561080b57600080fd5b506104d761081a366004611adf565b6112d1565b6104d761082d366004611adf565b611319565b34801561083e57600080fd5b5061044461084d366004611a81565b611361565b34801561085e57600080fd5b506104d7600c5481565b34801561087457600080fd5b5061045b6113a9565b34801561088957600080fd5b506104d7610898366004611a81565b6113b6565b3480156108a957600080fd5b506104d7611403565b3480156108be57600080fd5b506104b16108cd366004611a55565b61143a565b3480156108de57600080fd5b506104d7600a5481565b3480156108f457600080fd5b506104d7610903366004611a55565b61148e565b34801561091457600080fd5b506104d7610923366004611a9e565b6114e2565b34801561093457600080fd5b506104d7610943366004611a81565b61153e565b34801561095457600080fd5b506104d761158b565b34801561096957600080fd5b5061097d610978366004611a81565b6115c2565b604080519485526020850193909352918301526060820152608001610468565b6104d76109ab366004611adf565b611642565b3480156109bc57600080fd5b506104d761168a565b3480156109d157600080fd5b506104d760095481565b3480156109e757600080fd5b506104d76116c1565b6104d76109fe366004611adf565b6116f8565b348015610a0f57600080fd5b506104d7610a1e366004611bbb565b611740565b348015610a2f57600080fd5b506104d7611795565b348015610a4457600080fd5b506104d7610a53366004611a81565b6117cc565b348015610a6457600080fd5b50600654610590906001600160a01b031681565b348015610a8457600080fd5b506003546105909061010090046001600160a01b031681565b348015610aa957600080fd5b506104d7610ab8366004611adf565b611819565b60018054610aca90611bf4565b80601f0160208091040260200160405190810160405280929190818152602001828054610af690611bf4565b8015610b435780601f10610b1857610100808354040283529160200191610b43565b820191906000526020600020905b815481529060010190602001808311610b2657829003601f168201915b505050505081565b601454606090610b64906001600160a01b031683611861565b92915050565b6040516001600160a01b0383166024820152604481018290526000908190610bbe9060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b179052610b4b565b905080806020019051810190610bd49190611c2e565b949350505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166305eff7ef60e21b179052610b4b565b905080806020019051810190610c3f9190611c4b565b9392505050565b6040805160048152602481019091526020810180516001600160e01b031663182df0f560e01b1790526000908190610c7d90610e95565b905080806020019051810190610c939190611c4b565b91505090565b6040516001600160a01b0382166024820152610ce09060440160408051601f198184030181529190526020810180516001600160e01b031662df0cab60e51b179052610b4b565b5050565b6040516001600160a01b03808516602483015283166044820152606481018290526000908190610d409060840160408051601f198184030181529190526020810180516001600160e01b03166323b872dd60e01b179052610b4b565b905080806020019051810190610d569190611c2e565b95945050505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316633af9e66960e01b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b0316631d8e90d160e11b1790526000908190610c7d90610e95565b600080610c2983604051602401610dfc91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166303e9410160e41b179052610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b03166340c10f1960e01b179052610b4b565b905080806020019051810190610bd49190611c4b565b6060600080306001600160a01b031684604051602401610eb59190611930565b60408051601f198184030181529181526020820180516001600160e01b0316630933c1ed60e01b17905251610eea9190611c64565b600060405180830381855afa9150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b50909250905081610f3c573d60208201fd5b80806020019051810190610bd49190611c80565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316634576b5db60e01b179052610b4b565b60035461010090046001600160a01b031633146110225760405162461bcd60e51b815260206004820152603960248201527f4b457263323044656c656761746f723a3a5f736574496d706c656d656e74617460448201527f696f6e3a2043616c6c6572206d7573742062652061646d696e0000000000000060648201526084016103c0565b811561105c576040805160048152602481019091526020810180516001600160e01b031663153ab50560e01b17905261105a90610b4b565b505b601480546001600160a01b038581166001600160a01b03198316179092556040519116906110c190611092908490602401611930565b60408051601f198184030181529190526020810180516001600160e01b0316630adccee560e31b179052610b4b565b50601454604080516001600160a01b03808516825290921660208301527fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a910160405180910390a150505050565b6040516001600160a01b0380851660248301528316604482015260648101829052600090819061116b9060840160408051601f198184030181529190526020810180516001600160e01b0316632c84352f60e11b179052610b4b565b905080806020019051810190610d569190611c4b565b600080610c298360405160240161119a91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663601a0bf160e01b179052610b4b565b6040516001600160a01b03808616602483015280851660448301526064820184905282166084820152600090819061122d9060a40160408051601f198184030181529190526020810180516001600160e01b0316630c9fae0f60e31b179052610b4b565b9050808060200190518101906112439190611c4b565b9695505050505050565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166370a0823160e01b179052610e95565b6040805160048152602481019091526020810180516001600160e01b0316630e759dd360e31b1790526000908190610c7d90610b4b565b600080610c29836040516024016112ea91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634181842360e11b179052610b4b565b600080610c298360405160240161133291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663852a12e360e01b179052610b4b565b6040516001600160a01b0382166024820152610ce09060440160408051601f198184030181529190526020810180516001600160e01b031663454bce6b60e11b179052610b4b565b60028054610aca90611bf4565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b03166395dd919360e01b179052610e95565b6040805160048152602481019091526020810180516001600160e01b031663a6afed9560e01b1790526000908190610c7d90610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610bbe9060640160408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b179052610b4b565b6040516001600160a01b0383166024820152604481018290526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b031663157b6bd560e31b179052610b4b565b6040516001600160a01b0380851660248301528316604482015260648101829052600090819061116b9060840160408051601f198184030181529190526020810180516001600160e01b031663b2a02ff160e01b179052610b4b565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b0316632dc7468360e21b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b031663bd6d894d60e01b1790526000908190610c7d90610b4b565b600080600080600061161c866040516024016115ed91906001600160a01b0391909116815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166361bfb47160e11b179052610e95565b9050808060200190518101906116329190611cee565b9450945094509450509193509193565b600080610c298360405160240161165b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663317afabb60e21b179052610b4b565b6040805160048152602481019091526020810180516001600160e01b0316633364600760e21b1790526000908190610c7d90610e95565b6040805160048152602481019091526020810180516001600160e01b03166369de963960e11b1790526000908190610c7d90610e95565b600080610c298360405160240161171191815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663db006a7560e01b179052610b4b565b6040516001600160a01b038084166024830152821660448201526000908190610e7f9060640160408051601f198184030181529190526020810180516001600160e01b0316636eb1769f60e11b179052610e95565b6040805160048152602481019091526020810180516001600160e01b03166374e38a7960e11b1790526000908190610c7d90610b4b565b6040516001600160a01b03821660248201526000908190610c299060440160408051601f198184030181529190526020810180516001600160e01b031663f2b3abbd60e01b179052610b4b565b600080610c298360405160240161183291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663fca7820b60e01b179052610b4b565b6060600080846001600160a01b03168460405161187e9190611c64565b600060405180830381855af49150503d80600081146118b9576040519150601f19603f3d011682016040523d82523d6000602084013e6118be565b606091505b50909250905081610bd4573d60208201fd5b8183823760009101908152919050565b60005b838110156118fb5781810151838201526020016118e3565b50506000910152565b6000815180845261191c8160208601602086016118e0565b601f01601f19169290920160200192915050565b602081526000610c3f6020830184611904565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561198257611982611943565b604052919050565b600067ffffffffffffffff8211156119a4576119a4611943565b50601f01601f191660200190565b600082601f8301126119c357600080fd5b81356119d66119d18261198a565b611959565b8181528460208386010111156119eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611a1a57600080fd5b813567ffffffffffffffff811115611a3157600080fd5b610bd4848285016119b2565b6001600160a01b0381168114611a5257600080fd5b50565b60008060408385031215611a6857600080fd5b8235611a7381611a3d565b946020939093013593505050565b600060208284031215611a9357600080fd5b8135610c3f81611a3d565b600080600060608486031215611ab357600080fd5b8335611abe81611a3d565b92506020840135611ace81611a3d565b929592945050506040919091013590565b600060208284031215611af157600080fd5b5035919050565b8015158114611a5257600080fd5b600080600060608486031215611b1b57600080fd5b8335611b2681611a3d565b92506020840135611b3681611af8565b9150604084013567ffffffffffffffff811115611b5257600080fd5b611b5e868287016119b2565b9150509250925092565b60008060008060808587031215611b7e57600080fd5b8435611b8981611a3d565b93506020850135611b9981611a3d565b9250604085013591506060850135611bb081611a3d565b939692955090935050565b60008060408385031215611bce57600080fd5b8235611bd981611a3d565b91506020830135611be981611a3d565b809150509250929050565b600181811c90821680611c0857607f821691505b602082108103611c2857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c4057600080fd5b8151610c3f81611af8565b600060208284031215611c5d57600080fd5b5051919050565b60008251611c768184602087016118e0565b9190910192915050565b600060208284031215611c9257600080fd5b815167ffffffffffffffff811115611ca957600080fd5b8201601f81018413611cba57600080fd5b8051611cc86119d18261198a565b818152856020838501011115611cdd57600080fd5b610d568260208301602086016118e0565b60008060008060808587031215611d0457600080fd5b50508251602084015160408501516060909501519196909550909250905056fea2646970667358221220efdbaf1a1bda1e7866466a98cc8431879659f89c20f70699ed5a914f7600545864736f6c63430008140033",
  "devdoc": {
    "author": "Kawa",
    "kind": "dev",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin",
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_addReserves(uint256)": {
        "params": {
          "addAmount": "Amount of reserves to add"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_reduceReserves(uint256)": {
        "params": {
          "reduceAmount": "Amount of reduction to reserves"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_setComptroller(address)": {
        "details": "Admin function to set a new comptroller",
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_setImplementation(address,bool,bytes)": {
        "params": {
          "allowResign": "Flag to indicate whether to call _resignImplementation on the old implementation",
          "becomeImplementationData": "The encoded bytes data to be passed to _becomeImplementation",
          "implementation_": "The address of the new implementation for delegation"
        }
      },
      "_setInterestRateModel(address)": {
        "details": "Admin function to accrue interest and update the interest rate model",
        "params": {
          "newInterestRateModel": "the new interest rate model to use"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_setProtocolSeizeShare(uint256)": {
        "details": "Admin function to accrue interest and set a new protocol seize share",
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "_setReserveFactor(uint256)": {
        "details": "Admin function to accrue interest and set a new reserve factor",
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "accrueInterest()": {
        "details": "This calculates interest accrued from the last checkpointed block      up to the current block and writes new checkpoint to storage."
      },
      "allowance(address,address)": {
        "params": {
          "owner": "The address of the account which owns the tokens to be spent",
          "spender": "The address of the account which may transfer tokens"
        },
        "returns": {
          "_0": "The number of tokens allowed to be spent (uint.max means infinite)"
        }
      },
      "approve(address,uint256)": {
        "details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
        "params": {
          "amount": "The number of tokens that are approved (uint.max means infinite)",
          "spender": "The address of the account which may transfer tokens"
        },
        "returns": {
          "_0": "Whether or not the approval succeeded"
        }
      },
      "balanceOf(address)": {
        "params": {
          "owner": "The address of the account to query"
        },
        "returns": {
          "_0": "The number of tokens owned by `owner`"
        }
      },
      "balanceOfUnderlying(address)": {
        "details": "This also accrues interest in a transaction",
        "params": {
          "owner": "The address of the account to query"
        },
        "returns": {
          "_0": "The amount of underlying owned by `owner`"
        }
      },
      "borrow(uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset to borrow"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "borrowBalanceCurrent(address)": {
        "params": {
          "account": "The address whose balance should be calculated after updating borrowIndex"
        },
        "returns": {
          "_0": "The calculated balance"
        }
      },
      "borrowBalanceStored(address)": {
        "params": {
          "account": "The address whose balance should be calculated"
        },
        "returns": {
          "_0": "The calculated balance"
        }
      },
      "borrowRatePerTimestamp()": {
        "returns": {
          "_0": "The borrow interest rate per timestamp, scaled by 1e18"
        }
      },
      "constructor": {
        "params": {
          "admin_": "Address of the administrator of this token",
          "becomeImplementationData": "The encoded args for becomeImplementation",
          "comptroller_": "The address of the Comptroller",
          "decimals_": "ERC-20 decimal precision of this token",
          "implementation_": "The address of the implementation the contract delegates to",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "messageHub_": "The address of the MessageHub",
          "name_": "ERC-20 name of this token",
          "symbol_": "ERC-20 symbol of this token",
          "underlying_": "The address of the underlying asset"
        }
      },
      "delegateToImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "returns": {
          "_0": "The returned bytes from the delegatecall"
        }
      },
      "delegateToViewImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts  There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "returns": {
          "_0": "The returned bytes from the delegatecall"
        }
      },
      "exchangeRateCurrent()": {
        "returns": {
          "_0": "Calculated exchange rate scaled by 1e18"
        }
      },
      "exchangeRateStored()": {
        "details": "This function does not accrue interest before calculating the exchange rate",
        "returns": {
          "_0": "Calculated exchange rate scaled by 1e18"
        }
      },
      "getAccountSnapshot(address)": {
        "details": "This is used by comptroller to more efficiently perform liquidity checks.",
        "params": {
          "account": "Address of the account to snapshot"
        },
        "returns": {
          "_0": "(possible error, token balance, borrow balance, exchange rate mantissa)"
        }
      },
      "getCash()": {
        "returns": {
          "_0": "The quantity of underlying asset owned by this contract"
        }
      },
      "liquidateBorrow(address,address,uint256,address)": {
        "params": {
          "borrower": "The borrower of this kToken to be liquidated",
          "kTokenCollateral": "The market in which to seize collateral from the borrower",
          "liquidator": "The address repaying the borrow and seizing collateral",
          "repayAmount": "The amount of the underlying borrowed asset to repay"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "mint(address,uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "mintAmount": "The amount of the underlying asset to supply",
          "minter": "The address of the account which is supplying the assets"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "redeem(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemTokens": "The number of kTokens to redeem into underlying"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "redeemUnderlying(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemAmount": "The amount of underlying to redeem"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "repayBorrow(address,uint256)": {
        "params": {
          "payer": "the account paying off the borrow",
          "repayAmount": "The amount to repay, or uint.max for the full outstanding amount"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "repayBorrowBehalf(address,address,uint256)": {
        "params": {
          "borrower": "the account with the debt being payed off",
          "payer": "the account paying off the borrow",
          "repayAmount": "The amount to repay, or uint.max for the full outstanding amount"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "seize(address,address,uint256)": {
        "details": "Will fail unless called by another kToken during the process of liquidation.  Its absolutely critical to use msg.sender as the borrowed kToken and not a parameter.",
        "params": {
          "borrower": "The account having collateral seized",
          "liquidator": "The account receiving seized collateral",
          "seizeTokens": "The number of kTokens to seize"
        },
        "returns": {
          "_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
        }
      },
      "supplyRatePerTimestamp()": {
        "returns": {
          "_0": "The supply interest rate per timestamp, scaled by 1e18"
        }
      },
      "sweepToken(address)": {
        "params": {
          "token": "The address of the ERC-20 token to sweep"
        }
      },
      "totalBorrowsCurrent()": {
        "returns": {
          "_0": "The total borrows with interest"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account"
        },
        "returns": {
          "_0": "Whether or not the transfer succeeded"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account",
          "src": "The address of the source account"
        },
        "returns": {
          "_0": "Whether or not the transfer succeeded"
        }
      }
    },
    "title": "Kawa's KErc20Delegator.sol Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AccrueInterest(uint256,uint256,uint256,uint256)": {
        "notice": "Event emitted when interest is accrued"
      },
      "Approval(address,address,uint256)": {
        "notice": "EIP20 Approval event"
      },
      "Borrow(address,uint256,uint256,uint256)": {
        "notice": "Event emitted when underlying is borrowed"
      },
      "LiquidateBorrow(address,address,uint256,address,uint256)": {
        "notice": "Event emitted when a borrow is liquidated"
      },
      "Mint(address,uint256,uint256)": {
        "notice": "Event emitted when tokens are minted"
      },
      "NewAdmin(address,address)": {
        "notice": "Event emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewComptroller(address,address)": {
        "notice": "Event emitted when comptroller is changed"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewMarketInterestRateModel(address,address)": {
        "notice": "Event emitted when interestRateModel is changed"
      },
      "NewMessageHub(address,address)": {
        "notice": "Event emitted when the message hub is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Event emitted when pendingAdmin is changed"
      },
      "NewProtocolSeizeShare(uint256,uint256)": {
        "notice": "Event emitted when the protocol seize share is changed"
      },
      "NewReserveFactor(uint256,uint256)": {
        "notice": "Event emitted when the reserve factor is changed"
      },
      "Redeem(address,uint256,uint256)": {
        "notice": "Event emitted when tokens are redeemed"
      },
      "RepayBorrow(address,address,uint256,uint256,uint256)": {
        "notice": "Event emitted when a borrow is repaid"
      },
      "ReservesAdded(address,uint256,uint256)": {
        "notice": "Event emitted when the reserves are added"
      },
      "ReservesReduced(address,uint256,uint256)": {
        "notice": "Event emitted when the reserves are reduced"
      },
      "Transfer(address,address,uint256)": {
        "notice": "EIP20 Transfer event"
      }
    },
    "kind": "user",
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_addReserves(uint256)": {
        "notice": "Accrues interest and adds reserves by transferring from admin"
      },
      "_reduceReserves(uint256)": {
        "notice": "Accrues interest and reduces reserves by transferring to admin"
      },
      "_setComptroller(address)": {
        "notice": "Sets a new comptroller for the market"
      },
      "_setImplementation(address,bool,bytes)": {
        "notice": "Called by the admin to update the implementation of the delegator"
      },
      "_setInterestRateModel(address)": {
        "notice": "Accrues interest and updates the interest rate model using _setInterestRateModelFresh"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProtocolSeizeShare(uint256)": {
        "notice": "accrues interest and sets a new protocol seize share for the protocol using _setProtocolSeizeShareFresh"
      },
      "_setReserveFactor(uint256)": {
        "notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
      },
      "accrualBlockTimestamp()": {
        "notice": "Block number that interest was last accrued at"
      },
      "accrueInterest()": {
        "notice": "Applies accrued interest to total borrows and reserves."
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "allowance(address,address)": {
        "notice": "Get the current allowance from `owner` for `spender`"
      },
      "approve(address,uint256)": {
        "notice": "Approve `spender` to transfer up to `amount` from `src`"
      },
      "balanceOf(address)": {
        "notice": "Get the token balance of the `owner`"
      },
      "balanceOfUnderlying(address)": {
        "notice": "Get the underlying balance of the `owner`"
      },
      "borrow(uint256)": {
        "notice": "Sender borrows assets from the protocol to their own address"
      },
      "borrowBalanceCurrent(address)": {
        "notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
      },
      "borrowBalanceStored(address)": {
        "notice": "Return the borrow balance of account based on stored data"
      },
      "borrowIndex()": {
        "notice": "Accumulator of the total earned interest rate since the opening of the market"
      },
      "borrowRatePerTimestamp()": {
        "notice": "Returns the current per-timestamp borrow interest rate for this kToken"
      },
      "comptroller()": {
        "notice": "Contract which oversees inter-kToken operations"
      },
      "constructor": {
        "notice": "Construct a new money market"
      },
      "decimals()": {
        "notice": "EIP-20 token decimals for this token"
      },
      "delegateToImplementation(bytes)": {
        "notice": "Delegates execution to the implementation contract"
      },
      "delegateToViewImplementation(bytes)": {
        "notice": "Delegates execution to an implementation contract"
      },
      "exchangeRateCurrent()": {
        "notice": "Accrue interest then return the up-to-date exchange rate"
      },
      "exchangeRateStored()": {
        "notice": "Calculates the exchange rate from the underlying to the KToken"
      },
      "getAccountSnapshot(address)": {
        "notice": "Get a snapshot of the account's balances, and the cached exchange rate"
      },
      "getCash()": {
        "notice": "Get cash balance of this kToken in the underlying asset"
      },
      "implementation()": {
        "notice": "Implementation address for this contract"
      },
      "interestRateModel()": {
        "notice": "Model which tells what the current interest rate should be"
      },
      "isKToken()": {
        "notice": "Indicator that this is a KToken contract (for inspection)"
      },
      "liquidateBorrow(address,address,uint256,address)": {
        "notice": "The sender liquidates the borrowers collateral.  The collateral seized is transferred to the liquidator."
      },
      "messageHub()": {
        "notice": "messageHub for this KToken"
      },
      "mint(address,uint256)": {
        "notice": "Sender supplies assets into the market and receives kTokens in exchange"
      },
      "name()": {
        "notice": "EIP-20 token name for this token"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "protocolSeizeShareMantissa()": {
        "notice": "Share of seized collateral that is added to reserves"
      },
      "redeem(uint256)": {
        "notice": "Sender redeems kTokens in exchange for the underlying asset"
      },
      "redeemUnderlying(uint256)": {
        "notice": "Sender redeems kTokens in exchange for a specified amount of underlying asset"
      },
      "repayBorrow(address,uint256)": {
        "notice": "Sender repays their own borrow"
      },
      "repayBorrowBehalf(address,address,uint256)": {
        "notice": "Sender repays a borrow belonging to borrower"
      },
      "reserveFactorMantissa()": {
        "notice": "Fraction of interest currently set aside for reserves"
      },
      "seize(address,address,uint256)": {
        "notice": "Transfers collateral tokens (this market) to the liquidator."
      },
      "supplyRatePerTimestamp()": {
        "notice": "Returns the current per-timestamp supply interest rate for this kToken"
      },
      "sweepToken(address)": {
        "notice": "A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)"
      },
      "symbol()": {
        "notice": "EIP-20 token symbol for this token"
      },
      "totalBorrows()": {
        "notice": "Total amount of outstanding borrows of the underlying in this market"
      },
      "totalBorrowsCurrent()": {
        "notice": "Returns the current total borrows plus accrued interest"
      },
      "totalReserves()": {
        "notice": "Total amount of reserves of the underlying held in this market"
      },
      "totalSupply()": {
        "notice": "Total number of tokens in circulation"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer `amount` tokens from `src` to `dst`"
      },
      "underlying()": {
        "notice": "Underlying asset for this KToken"
      }
    },
    "notice": "KTokens which wrap an EIP-20 underlying and delegate to an implementation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15319,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "_notEntered",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15322,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 15325,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 15328,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "decimals",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 15338,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "admin",
        "offset": 1,
        "slot": "3",
        "type": "t_address_payable"
      },
      {
        "astId": 15341,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "4",
        "type": "t_address_payable"
      },
      {
        "astId": 15345,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "comptroller",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ComptrollerInterface)6331"
      },
      {
        "astId": 15349,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "interestRateModel",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(InterestRateModel)17571"
      },
      {
        "astId": 15351,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "initialExchangeRateMantissa",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 15354,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "reserveFactorMantissa",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 15357,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "accrualBlockTimestamp",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 15360,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "borrowIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 15363,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "totalBorrows",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 15366,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "totalReserves",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 15369,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "totalSupply",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 15374,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "accountTokens",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15381,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "transferAllowances",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 15392,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "accountBorrows",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_struct(BorrowSnapshot)15387_storage)"
      },
      {
        "astId": 15395,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "protocolSeizeShareMantissa",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 15728,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "underlying",
        "offset": 0,
        "slot": "18",
        "type": "t_address"
      },
      {
        "astId": 15731,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "messageHub",
        "offset": 0,
        "slot": "19",
        "type": "t_address"
      },
      {
        "astId": 15900,
        "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
        "label": "implementation",
        "offset": 0,
        "slot": "20",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ComptrollerInterface)6331": {
        "encoding": "inplace",
        "label": "contract ComptrollerInterface",
        "numberOfBytes": "20"
      },
      "t_contract(InterestRateModel)17571": {
        "encoding": "inplace",
        "label": "contract InterestRateModel",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(BorrowSnapshot)15387_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct KTokenStorage.BorrowSnapshot)",
        "numberOfBytes": "32",
        "value": "t_struct(BorrowSnapshot)15387_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(BorrowSnapshot)15387_storage": {
        "encoding": "inplace",
        "label": "struct KTokenStorage.BorrowSnapshot",
        "members": [
          {
            "astId": 15384,
            "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
            "label": "principal",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 15386,
            "contract": "contracts/KErc20CrossChainDelegator.sol:KErc20CrossChainDelegator",
            "label": "interestIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}