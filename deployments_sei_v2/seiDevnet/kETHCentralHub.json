{
  "address": "0xF82Be348C538825148E3454b917412496D93D13D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "kToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdapter",
          "type": "address"
        }
      ],
      "name": "NewAdapter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldKToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newKToken",
          "type": "address"
        }
      ],
      "name": "NewKToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "removedAdapter",
          "type": "address"
        }
      ],
      "name": "RemoveAdapter",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adapter",
          "type": "address"
        }
      ],
      "name": "_addAdapter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adapter",
          "type": "address"
        }
      ],
      "name": "_removeAdapter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "kToken_",
          "type": "address"
        }
      ],
      "name": "_setKToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adapters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "calculateGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "receiveMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9327cbaa0e511a7aeb0d96592496b69c45f868a8476b4a974a9778c5acf97066",
  "receipt": {
    "to": null,
    "from": "0x42f97fE9Eae657604d57C72A1362ab8a68088Afe",
    "contractAddress": "0xF82Be348C538825148E3454b917412496D93D13D",
    "transactionIndex": 0,
    "gasUsed": "1154856",
    "logsBloom": "0x
    "blockHash": "0xfffb2ad32ba0c2dfe50bc63b8f187feceebfa32a7ef049731577ea94e8c8463b",
    "transactionHash": "0x9327cbaa0e511a7aeb0d96592496b69c45f868a8476b4a974a9778c5acf97066",
    "logs": [
      {
        "transactionIndex": 27,
        "blockNumber": 64858138,
        "transactionHash": "0x9327cbaa0e511a7aeb0d96592496b69c45f868a8476b4a974a9778c5acf97066",
        "address": "0xF82Be348C538825148E3454b917412496D93D13D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000042f97fe9eae657604d57c72a1362ab8a68088afe"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfffb2ad32ba0c2dfe50bc63b8f187feceebfa32a7ef049731577ea94e8c8463b"
      }
    ],
    "blockNumber": 64858138,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "912a57824662bd29e429bb5e3ecac0e6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdapter\",\"type\":\"address\"}],\"name\":\"NewAdapter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldKToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newKToken\",\"type\":\"address\"}],\"name\":\"NewKToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"removedAdapter\",\"type\":\"address\"}],\"name\":\"RemoveAdapter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"}],\"name\":\"_addAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"}],\"name\":\"_removeAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kToken_\",\"type\":\"address\"}],\"name\":\"_setKToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adapters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"calculateGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CentralHub/CentralHub.sol\":\"CentralHub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/CentralHub/CentralHub.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"./MessageInterfaces.sol\\\";\\r\\nimport \\\"../KTokenInterfaces.sol\\\";\\r\\nimport \\\"../libs/UintToStrUtils.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n// todo make this upgradable\\r\\ncontract CentralHub is CentralHubInterfae, Ownable {\\r\\n\\r\\n    using UintToStrUtils for uint256;\\r\\n\\r\\n    address public kToken;\\r\\n    address[] public adapters;\\r\\n\\r\\n    event NewKToken(\\r\\n        address oldKToken,\\r\\n        address newKToken\\r\\n    );\\r\\n\\r\\n    event NewAdapter(address newAdapter);\\r\\n\\r\\n    event RemoveAdapter(address removedAdapter);\\r\\n\\r\\n    constructor(address kToken_){\\r\\n        kToken = kToken_;\\r\\n    }\\r\\n\\r\\n    function _setKToken(\\r\\n        address kToken_\\r\\n    ) external onlyOwner {\\r\\n        address oldKToken = kToken;\\r\\n        kToken = kToken_;\\r\\n        emit NewKToken(oldKToken, kToken);\\r\\n    }\\r\\n\\r\\n    function _addAdapter(\\r\\n        address adapter\\r\\n    ) external onlyOwner {\\r\\n        require(!_isAdapterExists(adapter), \\\"Adapter already exists\\\");\\r\\n        adapters.push(adapter);\\r\\n        emit NewAdapter(adapter);\\r\\n    }\\r\\n\\r\\n    function _removeAdapter(\\r\\n        address adapter\\r\\n    ) external onlyOwner {\\r\\n        uint256 index = adapters.length;\\r\\n        for (uint256 i = 0; i < adapters.length; i++) {\\r\\n            if (adapters[i] == adapter) {\\r\\n                index = i;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        require(index < adapters.length, \\\"Address not found\\\");\\r\\n\\r\\n        adapters[index] = adapters[adapters.length - 1];\\r\\n        adapters.pop();\\r\\n        emit RemoveAdapter(adapter);\\r\\n    }\\r\\n\\r\\n    function calculateGas(\\r\\n        bytes calldata payload\\r\\n    ) external view override returns (uint cost){\\r\\n        cost = 0;\\r\\n        for (uint256 i = 0; i < adapters.length; i++) {\\r\\n            cost += MessageInterface(adapters[i]).calculateGas(payload);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function sendMessage(\\r\\n        address sender,\\r\\n        bytes calldata payload\\r\\n    ) external payable override {\\r\\n        uint cost = this.calculateGas(payload);\\r\\n        _requireSenderCost(cost);\\r\\n\\r\\n        for (uint256 i = 0; i < adapters.length; i++) {\\r\\n            MessageInterface(adapters[i]).sendMessage{value: msg.value}(sender, payload);\\r\\n        }\\r\\n\\r\\n        if (msg.value - cost > 0) {\\r\\n            _sendEth(payable(sender), msg.value - cost);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function receiveMessage(\\r\\n        bytes calldata payload\\r\\n    ) external override onlyAdapters {\\r\\n        _executeAction(payload);\\r\\n    }\\r\\n\\r\\n    function _executeAction(bytes calldata payload) internal {\\r\\n        bytes4 selector = bytes4(payload[: 4]);\\r\\n\\r\\n        if (selector == KErc20CrossChainInterface.mint.selector) {\\r\\n            (, address sender, uint amount) = abi.decode(payload, (bytes4, address, uint));\\r\\n            KErc20CrossChainInterface(kToken).mint(sender, amount);\\r\\n        } else if (selector == KErc20CrossChainInterface.repayBorrow.selector) {\\r\\n            (, address sender, uint amount) = abi.decode(payload, (bytes4, address, uint));\\r\\n            KErc20CrossChainInterface(kToken).repayBorrow(sender, amount);\\r\\n        } else if (selector == KErc20CrossChainInterface.repayBorrowBehalf.selector) {\\r\\n            (, address sender, address borrower, uint amount) = abi.decode(payload, (bytes4, address, address, uint));\\r\\n            KErc20CrossChainInterface(kToken).repayBorrowBehalf(sender, borrower, amount);\\r\\n        } else if (selector == KClientInterface.releaseETH.selector) {\\r\\n            (, address recipient, uint amount) = abi.decode(payload, (bytes4, address, uint));\\r\\n            KClientInterface(kToken).releaseETH(payable(recipient), amount);\\r\\n        } else {\\r\\n            revert(\\\"Unknown function selector\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _sendEth(\\r\\n        address payable recipient,\\r\\n        uint amount\\r\\n    ) internal {\\r\\n        (bool success,) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(success, \\\"Refund  failed\\\");\\r\\n    }\\r\\n\\r\\n    function _requireSenderCost(\\r\\n        uint cost\\r\\n    ) internal {\\r\\n        require(msg.sender == kToken, \\\"Unauthorized\\\");\\r\\n        require(\\r\\n            msg.value >= cost,\\r\\n            string(abi.encodePacked(\\\"Insufficient funds for cross-chain message. Sent: \\\", msg.value.uint2str(), \\\" Required: \\\", cost.uint2str()))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _isAdapterExists(address adapter) internal view returns (bool) {\\r\\n        for (uint256 i = 0; i < adapters.length; i++) {\\r\\n            if (adapters[i] == adapter) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    modifier onlyAdapters() {\\r\\n        bool isAllowed = false;\\r\\n        for (uint256 i = 0; i < adapters.length; i++) {\\r\\n            if (adapters[i] == msg.sender) {\\r\\n                isAllowed = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(isAllowed, \\\"Not an adapter\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd480b4bc61046a1dffc341e632091fc661c620bd66d4bdd597a61ab126ec3592\",\"license\":\"UNLICENSED\"},\"contracts/CentralHub/MessageInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nabstract contract MessageInterface {\\r\\n    function sendMessage(\\r\\n        address sender,\\r\\n        bytes calldata payload\\r\\n    ) external payable virtual;\\r\\n\\r\\n    function calculateGas(\\r\\n        bytes memory payload\\r\\n    ) external view virtual returns (uint cost);\\r\\n}\\r\\n\\r\\nabstract contract CentralHubInterfae is MessageInterface {\\r\\n    function receiveMessage(\\r\\n        bytes calldata payload\\r\\n    ) external virtual;\\r\\n}\",\"keccak256\":\"0xb3dca3ca15b168e5c75ed6f75e5823fd4d2654cf3d3aba0bb17f1cbc2cccb3af\",\"license\":\"UNLICENSED\"},\"contracts/ComptrollerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nabstract contract ComptrollerInterface {\\r\\n    /// @notice Indicator that this is a Comptroller contract (for inspection)\\r\\n    bool public constant isComptroller = true;\\r\\n\\r\\n    /*** Assets You Are In ***/\\r\\n\\r\\n    function enterMarkets(\\r\\n        address[] calldata kTokens\\r\\n    ) external virtual returns (uint[] memory);\\r\\n    function exitMarket(address kToken) external virtual returns (uint);\\r\\n\\r\\n    /*** Policy Hooks ***/\\r\\n\\r\\n    function mintAllowed(\\r\\n        address kToken,\\r\\n        address minter,\\r\\n        uint mintAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function redeemAllowed(\\r\\n        address kToken,\\r\\n        address redeemer,\\r\\n        uint redeemTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    // Do not remove, still used by KToken\\r\\n    function redeemVerify(\\r\\n        address kToken,\\r\\n        address redeemer,\\r\\n        uint redeemAmount,\\r\\n        uint redeemTokens\\r\\n    ) external pure virtual;\\r\\n\\r\\n    function borrowAllowed(\\r\\n        address kToken,\\r\\n        address borrower,\\r\\n        uint borrowAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function repayBorrowAllowed(\\r\\n        address kToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function liquidateBorrowAllowed(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external view virtual returns (uint);\\r\\n\\r\\n    function seizeAllowed(\\r\\n        address kTokenCollateral,\\r\\n        address kTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    function transferAllowed(\\r\\n        address kToken,\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint transferTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** Liquidity/Liquidation Calculations ***/\\r\\n\\r\\n    function liquidateCalculateSeizeTokens(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        uint repayAmount\\r\\n    ) external view virtual returns (uint, uint);\\r\\n}\\r\\n\\r\\n// The hooks that were patched out of the comptroller to make room for the supply caps, if we need them\\r\\nabstract contract ComptrollerInterfaceWithAllVerificationHooks is\\r\\n    ComptrollerInterface\\r\\n{\\r\\n    function mintVerify(\\r\\n        address kToken,\\r\\n        address minter,\\r\\n        uint mintAmount,\\r\\n        uint mintTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    // Included in ComptrollerInterface already\\r\\n    // function redeemVerify(address kToken, address redeemer, uint redeemAmount, uint redeemTokens) virtual external;\\r\\n\\r\\n    function borrowVerify(\\r\\n        address kToken,\\r\\n        address borrower,\\r\\n        uint borrowAmount\\r\\n    ) external virtual;\\r\\n\\r\\n    function repayBorrowVerify(\\r\\n        address kToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint borrowerIndex\\r\\n    ) external virtual;\\r\\n\\r\\n    function liquidateBorrowVerify(\\r\\n        address kTokenBorrowed,\\r\\n        address kTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint seizeTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    function seizeVerify(\\r\\n        address kTokenCollateral,\\r\\n        address kTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual;\\r\\n\\r\\n    function transferVerify(\\r\\n        address kToken,\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint transferTokens\\r\\n    ) external virtual;\\r\\n}\\r\\n\",\"keccak256\":\"0x7ae39528ead57993b2652575ffa1457cbe8c1021be94cff255293da3e0dfdd39\",\"license\":\"BSD-3-Clause\"},\"contracts/EIP20NonStandardInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\n/**\\r\\n * @title EIP20NonStandardInterface\\r\\n * @dev Version of ERC20 with no return values for `transfer` and `transferFrom`\\r\\n *  See https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\r\\n */\\r\\ninterface EIP20NonStandardInterface {\\r\\n    /**\\r\\n     * @notice Get the total number of tokens in circulation\\r\\n     * @return The supply of tokens\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Gets the balance of the specified address\\r\\n     * @param owner The address from which the balance will be retrieved\\r\\n     * @return balance The balance\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transfer` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     */\\r\\n    function transfer(address dst, uint256 amount) external;\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transferFrom` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n     * @param src The address of the source account\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     */\\r\\n    function transferFrom(address src, address dst, uint256 amount) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n     * @dev This will overwrite the approval amount for `spender`\\r\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @param amount The number of tokens that are approved\\r\\n     * @return success Whether or not the approval succeeded\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n     * @notice Get the current allowance from `owner` for `spender`\\r\\n     * @param owner The address of the account which owns the tokens to be spent\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @return remaining The number of tokens allowed to be spent\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 amount\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0x93af1d53aab720b15cf34b59c36bf6c9f692987f5a8dd4e5f1f133a4394f980c\",\"license\":\"BSD-3-Clause\"},\"contracts/KTokenInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"./ComptrollerInterface.sol\\\";\\r\\nimport \\\"./irm/InterestRateModel.sol\\\";\\r\\nimport \\\"./EIP20NonStandardInterface.sol\\\";\\r\\nimport \\\"./TokenErrorReporter.sol\\\";\\r\\n\\r\\ncontract KTokenStorage {\\r\\n    /// @dev Guard variable for re-entrancy checks\\r\\n    bool internal _notEntered;\\r\\n\\r\\n    /// @notice EIP-20 token name for this token\\r\\n    string public name;\\r\\n\\r\\n    /// @notice EIP-20 token symbol for this token\\r\\n    string public symbol;\\r\\n\\r\\n    /// @notice EIP-20 token decimals for this token\\r\\n    uint8 public decimals;\\r\\n\\r\\n    /// @notice Maximum borrow rate that can ever be applied (.0005% / block)\\r\\n    uint internal constant borrowRateMaxMantissa = 0.0005e16;\\r\\n\\r\\n    // @notice Maximum fraction of interest that can be set aside for reserves\\r\\n    uint internal constant reserveFactorMaxMantissa = 1e18;\\r\\n\\r\\n    /// @notice Administrator for this contract\\r\\n    address payable public admin;\\r\\n\\r\\n    /// @notice Pending administrator for this contract\\r\\n    address payable public pendingAdmin;\\r\\n\\r\\n    /// @notice Contract which oversees inter-kToken operations\\r\\n    ComptrollerInterface public comptroller;\\r\\n\\r\\n    /// @notice Model which tells what the current interest rate should be\\r\\n    InterestRateModel public interestRateModel;\\r\\n\\r\\n    // @notice Initial exchange rate used when minting the first KTokens (used when totalSupply = 0)\\r\\n    uint internal initialExchangeRateMantissa;\\r\\n\\r\\n    /// @notice Fraction of interest currently set aside for reserves\\r\\n    uint public reserveFactorMantissa;\\r\\n\\r\\n    /// @notice Block number that interest was last accrued at\\r\\n    uint public accrualBlockTimestamp;\\r\\n\\r\\n    /// @notice Accumulator of the total earned interest rate since the opening of the market\\r\\n    uint public borrowIndex;\\r\\n\\r\\n    /// @notice Total amount of outstanding borrows of the underlying in this market\\r\\n    uint public totalBorrows;\\r\\n\\r\\n    /// @notice Total amount of reserves of the underlying held in this market\\r\\n    uint public totalReserves;\\r\\n\\r\\n    /// @notice Total number of tokens in circulation\\r\\n    uint public totalSupply;\\r\\n\\r\\n    /// @notice Official record of token balances for each account\\r\\n    mapping(address => uint) internal accountTokens;\\r\\n\\r\\n    /// @notice Approved token transfer amounts on behalf of others\\r\\n    mapping(address => mapping(address => uint)) internal transferAllowances;\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @notice Container for borrow balance information\\r\\n     * @member principal Total balance (with accrued interest), after applying the most recent balance-changing action\\r\\n     * @member interestIndex Global borrowIndex as of the most recent balance-changing action\\r\\n     */\\r\\n    struct BorrowSnapshot {\\r\\n        uint principal;\\r\\n        uint interestIndex;\\r\\n    }\\r\\n\\r\\n    // @notice Mapping of account addresses to outstanding borrow balances\\r\\n    mapping(address => BorrowSnapshot) internal accountBorrows;\\r\\n\\r\\n    /// @notice Share of seized collateral that is added to reserves\\r\\n    uint public protocolSeizeShareMantissa;\\r\\n}\\r\\n\\r\\nabstract contract KTokenInterface is KTokenStorage {\\r\\n    /// @notice Indicator that this is a KToken contract (for inspection)\\r\\n    bool public constant isKToken = true;\\r\\n\\r\\n    /*** Market Events ***/\\r\\n\\r\\n    /// @notice Event emitted when interest is accrued\\r\\n    event AccrueInterest(\\r\\n        uint cashPrior,\\r\\n        uint interestAccumulated,\\r\\n        uint borrowIndex,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when tokens are minted\\r\\n    event Mint(address minter, uint mintAmount, uint mintTokens);\\r\\n\\r\\n    /// @notice Event emitted when tokens are redeemed\\r\\n    event Redeem(address redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\r\\n    /// @notice Event emitted when underlying is borrowed\\r\\n    event Borrow(\\r\\n        address borrower,\\r\\n        uint borrowAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is repaid\\r\\n    event RepayBorrow(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is liquidated\\r\\n    event LiquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        address kTokenCollateral,\\r\\n        uint seizeTokens\\r\\n    );\\r\\n\\r\\n    /*** Admin Events ***/\\r\\n\\r\\n    /// @notice Event emitted when pendingAdmin is changed\\r\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\r\\n    /// @notice Event emitted when pendingAdmin is accepted, which means admin is updated\\r\\n    event NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\r\\n    /// @notice Event emitted when comptroller is changed\\r\\n    event NewComptroller(\\r\\n        ComptrollerInterface oldComptroller,\\r\\n        ComptrollerInterface newComptroller\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when interestRateModel is changed\\r\\n    event NewMarketInterestRateModel(\\r\\n        InterestRateModel oldInterestRateModel,\\r\\n        InterestRateModel newInterestRateModel\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserve factor is changed\\r\\n    event NewReserveFactor(\\r\\n        uint oldReserveFactorMantissa,\\r\\n        uint newReserveFactorMantissa\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the protocol seize share is changed\\r\\n    event NewProtocolSeizeShare(\\r\\n        uint oldProtocolSeizeShareMantissa,\\r\\n        uint newProtocolSeizeShareMantissa\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserves are added\\r\\n    event ReservesAdded(\\r\\n        address benefactor,\\r\\n        uint addAmount,\\r\\n        uint newTotalReserves\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the reserves are reduced\\r\\n    event ReservesReduced(\\r\\n        address admin,\\r\\n        uint reduceAmount,\\r\\n        uint newTotalReserves\\r\\n    );\\r\\n\\r\\n    /// @notice EIP20 Transfer event\\r\\n    event Transfer(address indexed from, address indexed to, uint amount);\\r\\n\\r\\n    /// @notice EIP20 Approval event\\r\\n    event Approval(address indexed owner, address indexed spender, uint amount);\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function transfer(address dst, uint amount) external virtual returns (bool);\\r\\n    function transferFrom(\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view virtual returns (uint);\\r\\n    function balanceOf(address owner) external view virtual returns (uint);\\r\\n    function balanceOfUnderlying(address owner) external virtual returns (uint);\\r\\n    function getAccountSnapshot(\\r\\n        address account\\r\\n    ) external view virtual returns (uint, uint, uint, uint);\\r\\n    function borrowRatePerTimestamp() external view virtual returns (uint);\\r\\n    function supplyRatePerTimestamp() external view virtual returns (uint);\\r\\n    function totalBorrowsCurrent() external virtual returns (uint);\\r\\n    function borrowBalanceCurrent(\\r\\n        address account\\r\\n    ) external virtual returns (uint);\\r\\n    function borrowBalanceStored(\\r\\n        address account\\r\\n    ) external view virtual returns (uint);\\r\\n    function exchangeRateCurrent() external virtual returns (uint);\\r\\n    function exchangeRateStored() external view virtual returns (uint);\\r\\n    function getCash() external view virtual returns (uint);\\r\\n    function accrueInterest() external virtual returns (uint);\\r\\n    function seize(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _setPendingAdmin(\\r\\n        address payable newPendingAdmin\\r\\n    ) external virtual returns (uint);\\r\\n    function _acceptAdmin() external virtual returns (uint);\\r\\n    function _setComptroller(\\r\\n        ComptrollerInterface newComptroller\\r\\n    ) external virtual returns (uint);\\r\\n    function _setReserveFactor(\\r\\n        uint newReserveFactorMantissa\\r\\n    ) external virtual returns (uint);\\r\\n    function _reduceReserves(uint reduceAmount) external virtual returns (uint);\\r\\n    function _setInterestRateModel(\\r\\n        InterestRateModel newInterestRateModel\\r\\n    ) external virtual returns (uint);\\r\\n    function _setProtocolSeizeShare(\\r\\n        uint newProtocolSeizeShareMantissa\\r\\n    ) external virtual returns (uint);\\r\\n}\\r\\n\\r\\ncontract KErc20Storage {\\r\\n    /// @notice Underlying asset for this KToken\\r\\n    address public underlying;\\r\\n    /// @notice centralHub for this KToken\\r\\n    address public centralHub;\\r\\n}\\r\\n\\r\\nabstract contract KErc20BaseInterface is KErc20Storage {\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function sweepToken(EIP20NonStandardInterface token) external virtual;\\r\\n    function _addReserves(uint addAmount) external virtual returns (uint);\\r\\n}\\r\\n\\r\\nabstract contract KErc20Interface {\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function mint(uint mintAmount) external virtual returns (uint);\\r\\n    function mintWithPermit(\\r\\n        uint mintAmount,\\r\\n        uint deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrow(uint repayAmount) external virtual returns (uint);\\r\\n    function repayBorrowBehalf(\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function redeem(uint redeemTokens) external virtual returns (uint);\\r\\n    function redeemUnderlying(\\r\\n        uint redeemAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function borrow(uint borrowAmount) external virtual returns (uint);\\r\\n    function liquidateBorrow(\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external virtual returns (uint);\\r\\n}\\r\\n\\r\\nabstract contract KErc20CrossChainInterface {\\r\\n    /*** MessageHub Interface ***/\\r\\n\\r\\n    function mint(\\r\\n        address minter,\\r\\n        uint mintAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrow(\\r\\n        address payer,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function repayBorrowBehalf(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external virtual returns (uint);\\r\\n    function liquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external virtual returns (uint);\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function redeem(uint redeemTokens) external payable virtual returns (uint);\\r\\n    function redeemUnderlying(\\r\\n        uint redeemAmount\\r\\n    ) external payable virtual returns (uint);\\r\\n    function borrow(uint borrowAmount) external payable virtual returns (uint);\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _setCentralHub(address newCentralHub) external virtual;\\r\\n\\r\\n    /// @notice Event emitted when the message hub is changed\\r\\n    event NewCentralHub(\\r\\n        address oldCentralHub,\\r\\n        address centralHub\\r\\n    );\\r\\n}\\r\\n\\r\\ncontract KDelegationStorage {\\r\\n    /// @notice Implementation address for this contract\\r\\n    address public implementation;\\r\\n}\\r\\n\\r\\nabstract contract KDelegatorInterface is KDelegationStorage {\\r\\n    /// @notice Emitted when implementation is changed\\r\\n    event NewImplementation(\\r\\n        address oldImplementation,\\r\\n        address newImplementation\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Called by the admin to update the implementation of the delegator\\r\\n     * @param implementation_ The address of the new implementation for delegation\\r\\n     * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation\\r\\n     * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation\\r\\n     */\\r\\n    function _setImplementation(\\r\\n        address implementation_,\\r\\n        bool allowResign,\\r\\n        bytes memory becomeImplementationData\\r\\n    ) external virtual;\\r\\n}\\r\\n\\r\\nabstract contract KDelegateInterface is KDelegationStorage {\\r\\n    /**\\r\\n     * @notice Called by the delegator on a delegate to initialize it for duty\\r\\n     * @dev Should revert if any issues arise which make it unfit for delegation\\r\\n     * @param data The encoded bytes data for any initialization\\r\\n     */\\r\\n    function _becomeImplementation(bytes memory data) external virtual;\\r\\n\\r\\n    /// @notice Called by the delegator on a delegate to forfeit its responsibility\\r\\n    function _resignImplementation() external virtual;\\r\\n}\\r\\n\\r\\ncontract KClientStorage {\\r\\n\\r\\n    /// @notice MessageHub implementation's address\\r\\n    address public centralHub;\\r\\n\\r\\n    /// @notice Administrator for this contract\\r\\n    address payable public admin;\\r\\n}\\r\\n\\r\\nabstract contract KClientInterface is KClientStorage {\\r\\n    /*** User Interface ***/\\r\\n    function mint(uint mintAmount) external payable virtual;\\r\\n    function repayBorrow(uint repayAmount) external payable virtual;\\r\\n    function repayBorrowBehalf(\\r\\n        address borrower,\\r\\n        uint repayAmount\\r\\n    ) external payable virtual;\\r\\n    function liquidateBorrow(\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        KTokenInterface kTokenCollateral\\r\\n    ) external payable virtual;\\r\\n    function releaseETH(\\r\\n        address payable recipient,\\r\\n        uint amount\\r\\n    ) external virtual returns (bool);\\r\\n\\r\\n    /// @notice Event emitted when tokens are minted\\r\\n    event Mint(address minter, uint mintAmount, uint mintTokens);\\r\\n\\r\\n    /// @notice Event emitted when a borrow is repaid\\r\\n    event RepayBorrow(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint accountBorrows,\\r\\n        uint totalBorrows\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when a borrow is liquidated\\r\\n    event LiquidateBorrow(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        address kTokenCollateral,\\r\\n        uint seizeTokens\\r\\n    );\\r\\n\\r\\n    /// @notice Event emitted when the message hub is changed\\r\\n    event NewCentralHub(\\r\\n        address oldClientHub,\\r\\n        address clientHub\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0x798baf2bb60e4247ce557443c9daa77a82d58968ffa675400cd9a0f739ff555c\",\"license\":\"BSD-3-Clause\"},\"contracts/TokenErrorReporter.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\ncontract ComptrollerErrorReporter {\\r\\n    enum Error {\\r\\n        NO_ERROR,\\r\\n        UNAUTHORIZED,\\r\\n        COMPTROLLER_MISMATCH,\\r\\n        INSUFFICIENT_SHORTFALL,\\r\\n        INSUFFICIENT_LIQUIDITY,\\r\\n        INVALID_CLOSE_FACTOR,\\r\\n        INVALID_COLLATERAL_FACTOR,\\r\\n        INVALID_LIQUIDATION_INCENTIVE,\\r\\n        MARKET_NOT_ENTERED, // no longer possible\\r\\n        MARKET_NOT_LISTED,\\r\\n        MARKET_ALREADY_LISTED,\\r\\n        MATH_ERROR,\\r\\n        NONZERO_BORROW_BALANCE,\\r\\n        PRICE_ERROR,\\r\\n        REJECTION,\\r\\n        SNAPSHOT_ERROR,\\r\\n        TOO_MANY_ASSETS,\\r\\n        TOO_MUCH_REPAY\\r\\n    }\\r\\n\\r\\n    enum FailureInfo {\\r\\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\\r\\n        ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK,\\r\\n        EXIT_MARKET_BALANCE_OWED,\\r\\n        EXIT_MARKET_REJECTION,\\r\\n        SET_CLOSE_FACTOR_OWNER_CHECK,\\r\\n        SET_CLOSE_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_OWNER_CHECK,\\r\\n        SET_COLLATERAL_FACTOR_NO_EXISTS,\\r\\n        SET_COLLATERAL_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_WITHOUT_PRICE,\\r\\n        SET_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_VALIDATION,\\r\\n        SET_MAX_ASSETS_OWNER_CHECK,\\r\\n        SET_PENDING_ADMIN_OWNER_CHECK,\\r\\n        SET_PENDING_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_PRICE_ORACLE_OWNER_CHECK,\\r\\n        SUPPORT_MARKET_EXISTS,\\r\\n        SUPPORT_MARKET_OWNER_CHECK,\\r\\n        SET_PAUSE_GUARDIAN_OWNER_CHECK,\\r\\n        SET_GAS_AMOUNT_OWNER_CHECK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\\r\\n     * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\\r\\n     **/\\r\\n    event Failure(uint error, uint info, uint detail);\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\\r\\n     */\\r\\n    function fail(Error err, FailureInfo info) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), 0);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting an opaque error from an upgradeable collaborator contract\\r\\n     */\\r\\n    function failOpaque(\\r\\n        Error err,\\r\\n        FailureInfo info,\\r\\n        uint opaqueError\\r\\n    ) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), opaqueError);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract TokenErrorReporter {\\r\\n    enum Error {\\r\\n        NO_ERROR,\\r\\n        UNAUTHORIZED,\\r\\n        BAD_INPUT,\\r\\n        COMPTROLLER_REJECTION,\\r\\n        COMPTROLLER_CALCULATION_ERROR,\\r\\n        INTEREST_RATE_MODEL_ERROR,\\r\\n        INVALID_ACCOUNT_PAIR,\\r\\n        INVALID_CLOSE_AMOUNT_REQUESTED,\\r\\n        INVALID_COLLATERAL_FACTOR,\\r\\n        MATH_ERROR,\\r\\n        MARKET_NOT_FRESH,\\r\\n        MARKET_NOT_LISTED,\\r\\n        TOKEN_INSUFFICIENT_ALLOWANCE,\\r\\n        TOKEN_INSUFFICIENT_BALANCE,\\r\\n        TOKEN_INSUFFICIENT_CASH,\\r\\n        TOKEN_TRANSFER_IN_FAILED,\\r\\n        TOKEN_TRANSFER_OUT_FAILED\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Note: FailureInfo (but not Error) is kept in alphabetical order\\r\\n     *       This is because FailureInfo grows significantly faster, and\\r\\n     *       the order of Error has some meaning, while the order of FailureInfo\\r\\n     *       is entirely arbitrary.\\r\\n     */\\r\\n    enum FailureInfo {\\r\\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\\r\\n        ACCRUE_INTEREST_ACCUMULATED_INTEREST_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_BORROW_RATE_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_BORROW_INDEX_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_TOTAL_BORROWS_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_NEW_TOTAL_RESERVES_CALCULATION_FAILED,\\r\\n        ACCRUE_INTEREST_SIMPLE_INTEREST_FACTOR_CALCULATION_FAILED,\\r\\n        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_ACCRUE_INTEREST_FAILED,\\r\\n        BORROW_CASH_NOT_AVAILABLE,\\r\\n        BORROW_FRESHNESS_CHECK,\\r\\n        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,\\r\\n        BORROW_MARKET_NOT_LISTED,\\r\\n        BORROW_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED,\\r\\n        LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED,\\r\\n        LIQUIDATE_COLLATERAL_FRESHNESS_CHECK,\\r\\n        LIQUIDATE_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED,\\r\\n        LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX,\\r\\n        LIQUIDATE_CLOSE_AMOUNT_IS_ZERO,\\r\\n        LIQUIDATE_FRESHNESS_CHECK,\\r\\n        LIQUIDATE_LIQUIDATOR_IS_BORROWER,\\r\\n        LIQUIDATE_REPAY_BORROW_FRESH_FAILED,\\r\\n        LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,\\r\\n        LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,\\r\\n        LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,\\r\\n        LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER,\\r\\n        LIQUIDATE_SEIZE_TOO_MUCH,\\r\\n        MINT_ACCRUE_INTEREST_FAILED,\\r\\n        MINT_COMPTROLLER_REJECTION,\\r\\n        MINT_EXCHANGE_CALCULATION_FAILED,\\r\\n        MINT_EXCHANGE_RATE_READ_FAILED,\\r\\n        MINT_FRESHNESS_CHECK,\\r\\n        MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,\\r\\n        MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\\r\\n        MINT_TRANSFER_IN_FAILED,\\r\\n        MINT_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        REDEEM_ACCRUE_INTEREST_FAILED,\\r\\n        REDEEM_COMPTROLLER_REJECTION,\\r\\n        REDEEM_EXCHANGE_TOKENS_CALCULATION_FAILED,\\r\\n        REDEEM_EXCHANGE_AMOUNT_CALCULATION_FAILED,\\r\\n        REDEEM_EXCHANGE_RATE_READ_FAILED,\\r\\n        REDEEM_FRESHNESS_CHECK,\\r\\n        REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,\\r\\n        REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\\r\\n        REDEEM_TRANSFER_OUT_NOT_POSSIBLE,\\r\\n        REDUCE_RESERVES_ACCRUE_INTEREST_FAILED,\\r\\n        REDUCE_RESERVES_ADMIN_CHECK,\\r\\n        REDUCE_RESERVES_CASH_NOT_AVAILABLE,\\r\\n        REDUCE_RESERVES_FRESH_CHECK,\\r\\n        REDUCE_RESERVES_VALIDATION,\\r\\n        REPAY_BEHALF_ACCRUE_INTEREST_FAILED,\\r\\n        REPAY_BORROW_ACCRUE_INTEREST_FAILED,\\r\\n        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_COMPTROLLER_REJECTION,\\r\\n        REPAY_BORROW_FRESHNESS_CHECK,\\r\\n        REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\\r\\n        REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        SET_COLLATERAL_FACTOR_OWNER_CHECK,\\r\\n        SET_COLLATERAL_FACTOR_VALIDATION,\\r\\n        SET_COMPTROLLER_OWNER_CHECK,\\r\\n        SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED,\\r\\n        SET_INTEREST_RATE_MODEL_FRESH_CHECK,\\r\\n        SET_INTEREST_RATE_MODEL_OWNER_CHECK,\\r\\n        SET_MAX_ASSETS_OWNER_CHECK,\\r\\n        SET_ORACLE_MARKET_NOT_LISTED,\\r\\n        SET_PENDING_ADMIN_OWNER_CHECK,\\r\\n        SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED,\\r\\n        SET_RESERVE_FACTOR_ADMIN_CHECK,\\r\\n        SET_RESERVE_FACTOR_FRESH_CHECK,\\r\\n        SET_RESERVE_FACTOR_BOUNDS_CHECK,\\r\\n        TRANSFER_COMPTROLLER_REJECTION,\\r\\n        TRANSFER_NOT_ALLOWED,\\r\\n        TRANSFER_NOT_ENOUGH,\\r\\n        TRANSFER_TOO_MUCH,\\r\\n        ADD_RESERVES_ACCRUE_INTEREST_FAILED,\\r\\n        ADD_RESERVES_FRESH_CHECK,\\r\\n        ADD_RESERVES_TRANSFER_IN_NOT_POSSIBLE,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_ACCRUE_INTEREST_FAILED,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_OWNER_CHECK,\\r\\n        SET_PROTOCOL_SEIZE_SHARE_FRESH_CHECK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\\r\\n     * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\\r\\n     **/\\r\\n    event Failure(uint error, uint info, uint detail);\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\\r\\n     */\\r\\n    function fail(Error err, FailureInfo info) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), 0);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev use this when reporting an opaque error from an upgradeable collaborator contract\\r\\n     */\\r\\n    function failOpaque(\\r\\n        Error err,\\r\\n        FailureInfo info,\\r\\n        uint opaqueError\\r\\n    ) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), opaqueError);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9214409e0b914b6ff5ef77e03ecefe0c9271d1e23d27c6dada7a8b1a1235ae17\",\"license\":\"BSD-3-Clause\"},\"contracts/irm/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.20;\\r\\n\\r\\n/**\\r\\n * @title Kawa's InterestRateModel Interface\\r\\n * @author Kawa\\r\\n */\\r\\nabstract contract InterestRateModel {\\r\\n    /// @notice Indicator that this is an InterestRateModel contract (for inspection)\\r\\n    bool public constant isInterestRateModel = true;\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the current borrow interest rate per timestamp\\r\\n     * @param cash The total amount of cash the market has\\r\\n     * @param borrows The total amount of borrows the market has outstanding\\r\\n     * @param reserves The total amount of reserves the market has\\r\\n     * @return The borrow rate per timestamp (as a percentage, and scaled by 1e18)\\r\\n     */\\r\\n    function getBorrowRate(\\r\\n        uint cash,\\r\\n        uint borrows,\\r\\n        uint reserves\\r\\n    ) external view virtual returns (uint);\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the current supply interest rate per timestamp\\r\\n     * @param cash The total amount of cash the market has\\r\\n     * @param borrows The total amount of borrows the market has outstanding\\r\\n     * @param reserves The total amount of reserves the market has\\r\\n     * @param reserveFactorMantissa The current reserve factor the market has\\r\\n     * @return The supply rate per timestamp (as a percentage, and scaled by 1e18)\\r\\n     */\\r\\n    function getSupplyRate(\\r\\n        uint cash,\\r\\n        uint borrows,\\r\\n        uint reserves,\\r\\n        uint reserveFactorMantissa\\r\\n    ) external view virtual returns (uint);\\r\\n}\\r\\n\",\"keccak256\":\"0x81db3c2dc31dd9eea2551206086f0c2ab90b150ca9febd1aa2cef5b1f351379d\",\"license\":\"BSD-3-Clause\"},\"contracts/libs/UintToStrUtils.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nlibrary UintToStrUtils {\\r\\n    function uint2str(uint256 _i) internal pure returns (string memory) {\\r\\n        if (_i == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 j = _i;\\r\\n        uint256 length;\\r\\n        while (j != 0) {\\r\\n            length++;\\r\\n            j /= 10;\\r\\n        }\\r\\n        bytes memory bstr = new bytes(length);\\r\\n        uint256 k = length;\\r\\n        while (_i != 0) {\\r\\n            k = k - 1;\\r\\n            bstr[k] = bytes1(uint8(48 + uint256(_i % 10)));\\r\\n            _i /= 10;\\r\\n        }\\r\\n        return string(bstr);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x04934b5f43020864e2d8a2fafce876387497df6f0bab6a3be13df59aeed48ac5\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161145138038061145183398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611365806100ec6000396000f3fe60806040526004361061009c5760003560e01c8063715018a611610064578063715018a6146101605780638da5cb5b14610175578063bb5ddb0f14610193578063db19f8b8146101a6578063f2fde38b146101d4578063f953cec7146101f457600080fd5b8063163444d5146100a1578063223c19f9146100c357806348c6019d146101005780634ef501ac146101205780636ed5379214610140575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610ea3565b610214565b005b3480156100cf57600080fd5b506001546100e3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010c57600080fd5b506100c161011b366004610ea3565b6102f4565b34801561012c57600080fd5b506100e361013b366004610ec7565b610494565b34801561014c57600080fd5b506100c161015b366004610ea3565b6104be565b34801561016c57600080fd5b506100c1610520565b34801561018157600080fd5b506000546001600160a01b03166100e3565b6100c16101a1366004610f29565b610534565b3480156101b257600080fd5b506101c66101c1366004610f7e565b610678565b6040519081526020016100f7565b3480156101e057600080fd5b506100c16101ef366004610ea3565b61073a565b34801561020057600080fd5b506100c161020f366004610f7e565b6107b3565b61021c610861565b610225816108bb565b156102705760405162461bcd60e51b81526020600482015260166024820152754164617074657220616c72656164792065786973747360501b60448201526064015b60405180910390fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383169081179091556040519081527ff9657d456e13b309f67c0481829377d6e1c68778e2f04a1b4339d885c7c6242d9060200160405180910390a150565b6102fc610861565b60025460005b60025481101561035d57826001600160a01b03166002828154811061032957610329610fc0565b6000918252602090912001546001600160a01b03160361034b5780915061035d565b8061035581610fec565b915050610302565b5060025481106103a35760405162461bcd60e51b81526020600482015260116024820152701059191c995cdcc81b9bdd08199bdd5b99607a1b6044820152606401610267565b600280546103b390600190611005565b815481106103c3576103c3610fc0565b600091825260209091200154600280546001600160a01b0390921691839081106103ef576103ef610fc0565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061042e5761042e61101e565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03841681527f34f33faa2592bc1f615ec3e91b55b7784665ce46461403c294824d85f9f6645891015b60405180910390a15050565b600281815481106104a457600080fd5b6000918252602090912001546001600160a01b0316905081565b6104c6610861565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f84db94e40e6dbe3caad59a7d17de7145400ba5c6abcafd6c24a5c8465b31dd5f9101610488565b610528610861565b6105326000610924565b565b604051631b633f1760e31b8152600090309063db19f8b89061055c908690869060040161105d565b602060405180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190611079565b90506105a881610974565b60005b60025481101561064c57600281815481106105c8576105c8610fc0565b60009182526020909120015460405163bb5ddb0f60e01b81526001600160a01b039091169063bb5ddb0f90349061060790899089908990600401611092565b6000604051808303818588803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b5050505050808061064490610fec565b9150506105ab565b5060006106598234611005565b1115610672576106728461066d8334611005565b610a15565b50505050565b6000805b600254811015610733576002818154811061069957610699610fc0565b600091825260209091200154604051631b633f1760e31b81526001600160a01b039091169063db19f8b8906106d4908790879060040161105d565b602060405180830381865afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611079565b61071f90836110c0565b91508061072b81610fec565b91505061067c565b5092915050565b610742610861565b6001600160a01b0381166107a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610267565b6107b081610924565b50565b6000805b60025481101561081357336001600160a01b0316600282815481106107de576107de610fc0565b6000918252602090912001546001600160a01b0316036108015760019150610813565b8061080b81610fec565b9150506107b7565b50806108525760405162461bcd60e51b815260206004820152600e60248201526d2737ba1030b71030b230b83a32b960911b6044820152606401610267565b61085c8383610aa9565b505050565b6000546001600160a01b031633146105325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610267565b6000805b60025481101561091b57826001600160a01b0316600282815481106108e6576108e6610fc0565b6000918252602090912001546001600160a01b0316036109095750600192915050565b8061091381610fec565b9150506108bf565b50600092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606401610267565b803410156109ca34610d83565b6109d383610d83565b6040516020016109e49291906110f7565b60405160208183030381529060405290610a115760405162461bcd60e51b81526004016102679190611181565b5050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a62576040519150601f19603f3d011682016040523d82523d6000602084013e610a67565b606091505b505090508061085c5760405162461bcd60e51b815260206004820152600e60248201526d1499599d5b99080819985a5b195960921b6044820152606401610267565b6000610ab860048284866111b4565b610ac1916111de565b905063bf3ef0e760e01b6001600160e01b0319821601610b7257600080610aea8486018661122b565b6001546040516340c10f1960e01b81526001600160a01b038085166004830152602482018490529396509194509190911691506340c10f19906044015b6020604051808303816000875af1158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a9190611079565b505050505050565b630a84942b60e31b6001600160e01b0319821601610bda57600080610b998486018661122b565b60015460405163157b6bd560e31b81526001600160a01b0380851660048301526024820184905293965091945091909116915063abdb5ea890604401610b27565b63537bcad160e11b6001600160e01b0319821601610c955760008080610c028587018761126a565b600154604051632c84352f60e11b81526001600160a01b0380861660048301528085166024830152604482018490529498509296509094509190911691506359086a5e906064016020604051808303816000875af1158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190611079565b50505050505050565b6305c6383d60e21b6001600160e01b0319821601610d3b57600080610cbc8486018661122b565b600154604051633a39c7c360e21b81526001600160a01b0380851660048301526024820184905293965091945091909116915063e8e71f0c906044016020604051808303816000875af1158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a91906112b9565b60405162461bcd60e51b815260206004820152601960248201527f556e6b6e6f776e2066756e6374696f6e2073656c6563746f72000000000000006044820152606401610267565b606081600003610daa5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610dd45780610dbe81610fec565b9150610dcd9050600a836112f1565b9150610dae565b60008167ffffffffffffffff811115610def57610def611305565b6040519080825280601f01601f191660200182016040528015610e19576020820181803683370190505b509050815b8515610e8557610e2f600182611005565b9050610e3c600a8761131b565b610e479060306110c0565b60f81b828281518110610e5c57610e5c610fc0565b60200101906001600160f81b031916908160001a905350610e7e600a876112f1565b9550610e1e565b50949350505050565b6001600160a01b03811681146107b057600080fd5b600060208284031215610eb557600080fd5b8135610ec081610e8e565b9392505050565b600060208284031215610ed957600080fd5b5035919050565b60008083601f840112610ef257600080fd5b50813567ffffffffffffffff811115610f0a57600080fd5b602083019150836020828501011115610f2257600080fd5b9250929050565b600080600060408486031215610f3e57600080fd5b8335610f4981610e8e565b9250602084013567ffffffffffffffff811115610f6557600080fd5b610f7186828701610ee0565b9497909650939450505050565b60008060208385031215610f9157600080fd5b823567ffffffffffffffff811115610fa857600080fd5b610fb485828601610ee0565b90969095509350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ffe57610ffe610fd6565b5060010190565b8181038181111561101857611018610fd6565b92915050565b634e487b7160e01b600052603160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000611071602083018486611034565b949350505050565b60006020828403121561108b57600080fd5b5051919050565b6001600160a01b03841681526040602082018190526000906110b79083018486611034565b95945050505050565b8082018082111561101857611018610fd6565b60005b838110156110ee5781810151838201526020016110d6565b50506000910152565b7f496e73756666696369656e742066756e647320666f722063726f73732d636861815271034b71036b2b9b9b0b3b2971029b2b73a1d160751b60208201526000835161114a8160328501602088016110d3565b6a0102932b8bab4b932b21d160ad1b603291840191820152835161117581603d8401602088016110d3565b01603d01949350505050565b60208152600082518060208401526111a08160408501602087016110d3565b601f01601f19169190910160400192915050565b600080858511156111c457600080fd5b838611156111d157600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156112065780818660040360031b1b83161692505b505092915050565b80356001600160e01b03198116811461122657600080fd5b919050565b60008060006060848603121561124057600080fd5b6112498461120e565b9250602084013561125981610e8e565b929592945050506040919091013590565b6000806000806080858703121561128057600080fd5b6112898561120e565b9350602085013561129981610e8e565b925060408501356112a981610e8e565b9396929550929360600135925050565b6000602082840312156112cb57600080fd5b81518015158114610ec057600080fd5b634e487b7160e01b600052601260045260246000fd5b600082611300576113006112db565b500490565b634e487b7160e01b600052604160045260246000fd5b60008261132a5761132a6112db565b50069056fea2646970667358221220a2b32a0877a38ec8eda4c5e9c2ab3a11cb1f27b36f81eaa07087c3238d8a4f9664736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2858,
        "contract": "contracts/CentralHub/CentralHub.sol:CentralHub",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5772,
        "contract": "contracts/CentralHub/CentralHub.sol:CentralHub",
        "label": "kToken",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5775,
        "contract": "contracts/CentralHub/CentralHub.sol:CentralHub",
        "label": "adapters",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}